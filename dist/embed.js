(function(){"use strict";console.log("[Enhancements Core] Initializing...");const he=new Map;let z=null,X=null;const Ee=new Set,T={register(e){if(!e.id||!e.name||!e.init||!e.mount||!e.unmount)throw new Error("Invalid app interface. Required: id, name, init, mount, unmount");he.set(e.id,e),console.log(`[App Manager] Registered app: ${e.name} (${e.id})`)},getApps(){return Array.from(he.values())},async switchTo(e){const t=he.get(e);if(!t)return console.error(`[App Manager] App not found: ${e}`),!1;try{if(!Ee.has(e)){console.log(`[App Manager] Initializing: ${t.name}`);const i={Monaco:ye,API:Ce,Storage:F,UI:R,DOM:E,Overlay:j,LoadingOverlay:G,FileImport:Se,Formatter:xe};await t.init(i),Ee.add(e)}if(z&&(console.log(`[App Manager] Unmounting: ${z.name}`),j.clearAppControls(),await z.unmount(),z.getState)){const i=z.getState();F.setAppState(z.id,i)}const o=document.getElementById("file-drop-zone"),s=o?.parentElement;let n=!1;return X&&(o&&s&&(s.removeChild(o),n=!0),X.innerHTML=""),console.log(`[App Manager] Mounting: ${t.name}`),await t.mount(X),z=t,n&&o&&X&&(X.appendChild(o),o.style.display="none",o.style.pointerEvents="none",o.style.visibility="hidden"),setTimeout(()=>{T.notifyResize();const i=document.getElementById("file-drop-zone");if(i){const a=window.getComputedStyle(i);(a.display!=="none"||a.pointerEvents!=="none")&&(i.style.display="none",i.style.pointerEvents="none",i.style.visibility="hidden")}},150),F.setCommonState({lastActiveApp:e}),j.updateAppSwitcher(),console.log(`[App Manager] Switched to: ${t.name}`),!0}catch(o){return console.error(`[App Manager] Failed to switch to ${e}:`,o),R.showToast(`Failed to load ${t.name}: ${o.message}`,"error"),!1}},getCurrentApp(){return z},notifyResize(){z&&typeof z.onResize=="function"&&z.onResize()},setContainer(e){X=e}};let ie=!1,fe=[];const ye={async init(){return ie?!0:new Promise((e,t)=>{if(console.log("[Monaco] Initializing..."),typeof window.monacoRequire>"u"){t(new Error("Monaco require not found"));return}window.monacoRequire.config({paths:{vs:"https://cdn.jsdelivr.net/npm/monaco-editor@0.44.0/min/vs"}}),window.monacoRequire(["vs/editor/editor.main"],function(){console.log("[Monaco] Initialized successfully"),ie=!0,fe.forEach(o=>o()),fe=[],e(!0)},function(o){console.error("[Monaco] Failed to initialize:",o),t(o)})})},isReady(){return ie},onReady(e){ie?e():fe.push(e)},get(){return window.monaco}},Ce={parseFormHTML(e){const o=new DOMParser().parseFromString(e,"text/html"),s={csrf_token:"",fields:{}},n=o.querySelector('input[name="csrf_token"]');return n&&(s.csrf_token=n.value),{doc:o,data:s}},buildMultipartBody(e){const t="----WebKitFormBoundary"+Math.random().toString(36).substring(2,15);let o="";return Object.entries(e).forEach(([s,n])=>{o+=`--${t}\r
`,o+=`Content-Disposition: form-data; name="${s}"\r
\r
`,o+=`${n}\r
`}),o+=`--${t}\r
`,o+=`Content-Disposition: form-data; name="deki_buttons[submit][submit]"\r
\r
`,o+=`submit\r
`,o+=`--${t}--\r
`,{body:o,boundary:t}},async fetch(e,t={}){return fetch(e,{credentials:"include",...t})}},V="expertEnhancements",F={getCommonState(){try{const e=localStorage.getItem(`${V}:common`);return e?JSON.parse(e):{}}catch(e){return console.warn("[Storage] Failed to get common state:",e),{}}},setCommonState(e){try{const o={...this.getCommonState(),...e};localStorage.setItem(`${V}:common`,JSON.stringify(o))}catch(t){console.warn("[Storage] Failed to set common state:",t)}},getAppState(e){try{const t=localStorage.getItem(`${V}:app:${e}`);return t?JSON.parse(t):null}catch(t){return console.warn(`[Storage] Failed to get state for ${e}:`,t),null}},setAppState(e,t){try{localStorage.setItem(`${V}:app:${e}`,JSON.stringify(t))}catch(o){console.warn(`[Storage] Failed to set state for ${e}:`,o)}},clearAppState(e){try{localStorage.removeItem(`${V}:app:${e}`)}catch(t){console.warn(`[Storage] Failed to clear state for ${e}:`,t)}},getFormatterSettings(){try{const e=localStorage.getItem(`${V}:formatter`),t={formatOnSave:!0,indentStyle:"spaces",indentSize:2,quoteStyle:"single",cssSettings:{parser:"css"},htmlSettings:{parser:"html"}};return e?{...t,...JSON.parse(e)}:t}catch(e){return console.warn("[Storage] Failed to get formatter settings:",e),{formatOnSave:!0,indentStyle:"spaces",indentSize:2,quoteStyle:"single",cssSettings:{parser:"css"},htmlSettings:{parser:"html"}}}},setFormatterSettings(e){try{localStorage.setItem(`${V}:formatter`,JSON.stringify(e))}catch(t){console.warn("[Storage] Failed to set formatter settings:",t)}}},R={_toastState:{activeToasts:[],toastQueue:[],maxToasts:3,toastIdCounter:0,lifecycleTimeout:null,isProcessing:!1},showToast(e,t="info",o=4e3){if(!document.getElementById("expert-enhancements-overlay")){console.warn("[UI] Overlay not found, cannot show toast");return}const n={id:++this._toastState.toastIdCounter,text:e,type:t,duration:o};this._toastState.toastQueue.push(n),this._processToastLifecycle()},_processToastLifecycle(){this._toastState.lifecycleTimeout&&clearTimeout(this._toastState.lifecycleTimeout),this._toastState.lifecycleTimeout=setTimeout(()=>{requestAnimationFrame(()=>{requestAnimationFrame(()=>{if(!this._toastState.isProcessing){this._toastState.isProcessing=!0;try{this._cleanupDismissedToasts(),this._processToastQueue(),this._updateToastUI()}finally{this._toastState.isProcessing=!1}}})})},50)},_cleanupDismissedToasts(){this._toastState.activeToasts.filter(t=>t.state==="dismissed").forEach(t=>{t.element&&t.element.parentElement&&t.element.remove();const o=this._toastState.activeToasts.indexOf(t);o!==-1&&this._toastState.activeToasts.splice(o,1)})},_processToastQueue(){const e=this._toastState.activeToasts.filter(t=>t.state!=="dismissing").length;for(;this._toastState.toastQueue.length>0&&e+this._toastState.activeToasts.filter(t=>t.state==="rendering").length<this._toastState.maxToasts;){const t=this._toastState.toastQueue.shift();this._renderToastElement(t)}},_updateToastUI(){this._repositionToasts(),this._updateDismissAllButton()},_renderToastElement(e){const t=document.getElementById("expert-enhancements-overlay");if(!t)return;const o={success:"rgba(34, 197, 94, 0.8)",warning:"rgba(251, 146, 60, 0.8)",error:"rgba(239, 68, 68, 0.8)",info:"rgba(59, 130, 246, 0.8)"},s=o[e.type]||o.info,n=document.createElement("div");n.className="enhancements-toast",n.dataset.toastId=e.id;const i=document.createElement("span");i.textContent=e.text,i.style.cssText=`
                flex: 1;
                margin-right: 8px;
            `;const a=document.createElement("button");a.innerHTML="×",a.style.cssText=`
                background: none;
                border: none;
                color: white;
                font-size: 20px;
                font-weight: bold;
                cursor: pointer;
                padding: 0;
                width: 20px;
                height: 20px;
                display: flex;
                align-items: center;
                justify-content: center;
                opacity: 0.8;
                transition: opacity 0.2s;
            `,a.onmouseover=()=>a.style.opacity="1",a.onmouseout=()=>a.style.opacity="0.8",a.onclick=()=>this._requestDismissToast(e.id),n.appendChild(i),n.appendChild(a);const c=1e4+this._toastState.activeToasts.length;if(n.style.cssText=`
                position: absolute;
                right: 20px;
                background: ${s};
                color: white;
                padding: 12px 16px;
                border-radius: 6px;
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
                z-index: ${c};
                font-size: 14px;
                display: flex;
                align-items: center;
                gap: 8px;
                max-width: 400px;
                pointer-events: auto;
                animation: slideDown 0.5s ease-out;
                transition: bottom 0.5s ease-out;
            `,!document.getElementById("enhancements-toast-style")){const r=document.createElement("style");r.id="enhancements-toast-style",r.textContent=`
                    @keyframes slideDown {
                        from {
                            opacity: 0;
                            transform: translateY(-120%);
                        }
                        to {
                            opacity: 1;
                            transform: translateY(0);
                        }
                    }

                    @keyframes slideOutBottom {
                        from {
                            opacity: 1;
                            transform: translateY(0);
                        }
                        to {
                            opacity: 0;
                            transform: translateY(150%);
                        }
                    }
                `,document.head.appendChild(r)}t.appendChild(n);const l={id:e.id,element:n,timeoutId:null,state:"rendering"};this._toastState.activeToasts.push(l),setTimeout(()=>{const r=this._toastState.activeToasts.find(d=>d.id===e.id);r&&r.state==="rendering"&&(r.state="active",r.timeoutId=setTimeout(()=>{this._requestDismissToast(e.id)},e.duration))},500)},_requestDismissToast(e){const t=this._toastState.activeToasts.find(o=>o.id===e);t&&(t.state==="dismissing"||t.state==="dismissed"||(t.timeoutId&&(clearTimeout(t.timeoutId),t.timeoutId=null),t.state="dismissing",t.element.style.animation="slideOutBottom 0.5s ease-in forwards",setTimeout(()=>{const o=this._toastState.activeToasts.find(s=>s.id===e);o&&o.state==="dismissing"&&(o.state="dismissed",this._processToastLifecycle())},500)))},_requestDismissAllToasts(){this._toastState.activeToasts.filter(t=>t.state!=="dismissing"&&t.state!=="dismissed").map(t=>t.id).forEach(t=>this._requestDismissToast(t)),this._toastState.toastQueue=[]},_repositionToasts(){let e=20;this._toastState.activeToasts.forEach((t,o)=>{t.element.style.bottom=`${e}px`,t.element.style.zIndex=1e4+o;const s=t.element.offsetHeight;e+=s+10})},_updateDismissAllButton(){const e=document.getElementById("expert-enhancements-overlay");if(!e)return;let t=document.getElementById("enhancements-dismiss-all");const o=this._toastState.activeToasts.filter(s=>s.state!=="dismissing"&&s.state!=="dismissed");if(o.length>=2){if(t||(t=document.createElement("button"),t.id="enhancements-dismiss-all",t.textContent="Dismiss All",t.style.cssText=`
                        position: absolute;
                        right: 20px;
                        background: rgba(30, 30, 30, 0.9);
                        color: white;
                        padding: 8px 16px;
                        border-radius: 6px;
                        border: 1px solid rgba(255, 255, 255, 0.2);
                        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
                        z-index: 10100;
                        font-size: 12px;
                        cursor: pointer;
                        pointer-events: auto;
                        transition: background 0.2s, bottom 0.5s ease-out;
                    `,t.onmouseover=()=>{t.style.background="rgba(50, 50, 50, 0.9)"},t.onmouseout=()=>{t.style.background="rgba(30, 30, 30, 0.9)"},t.onclick=()=>this._requestDismissAllToasts(),e.appendChild(t)),o.length>0){const s=o[o.length-1],n=parseInt(s.element.style.bottom),i=s.element.offsetHeight;t.style.bottom=`${n+i+10}px`}}else t&&t.remove()},async confirm(e,t={}){const{confirmText:o="Confirm",cancelText:s="Cancel",type:n="danger"}=t;return new Promise(i=>{const a=document.createElement("div");a.className="enhancements-confirm-overlay",a.style.cssText=`
                    position: fixed;
                    top: 0;
                    left: 0;
                    right: 0;
                    bottom: 0;
                    background: rgba(0, 0, 0, 0.5);
                    z-index: 1000000;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    animation: fadeIn 0.2s ease-out;
                `;const c=document.createElement("div");c.className="enhancements-confirm-dialog",c.style.cssText=`
                    background: #2d2d30;
                    border: 1px solid #444;
                    border-radius: 8px;
                    padding: 24px;
                    min-width: 400px;
                    max-width: 500px;
                    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.5);
                    animation: slideDown 0.2s ease-out;
                `;const l=document.createElement("div");l.textContent=e,l.style.cssText=`
                    color: #e9ecef;
                    font-size: 16px;
                    margin-bottom: 24px;
                    line-height: 1.5;
                `;const r=document.createElement("div");r.style.cssText=`
                    display: flex;
                    gap: 12px;
                    justify-content: flex-end;
                `;const d=document.createElement("button");d.textContent=s,d.style.cssText=`
                    background: transparent;
                    border: 1px solid #555;
                    color: #e9ecef;
                    padding: 8px 20px;
                    border-radius: 4px;
                    cursor: pointer;
                    font-size: 14px;
                    font-weight: 500;
                    transition: all 0.2s;
                `,d.onmouseover=()=>{d.style.background="#3a3a3a"},d.onmouseout=()=>{d.style.background="transparent"};const f=document.createElement("button");f.textContent=o;const u=n==="danger"?"#dc3545":"#0d6efd",v=n==="danger"?"#bb2d3b":"#0b5ed7";if(f.style.cssText=`
                    background: ${u};
                    border: 1px solid ${u};
                    color: white;
                    padding: 8px 20px;
                    border-radius: 4px;
                    cursor: pointer;
                    font-size: 14px;
                    font-weight: 500;
                    transition: all 0.2s;
                `,f.onmouseover=()=>{f.style.background=v,f.style.borderColor=v},f.onmouseout=()=>{f.style.background=u,f.style.borderColor=u},!document.getElementById("enhancements-confirm-style")){const b=document.createElement("style");b.id="enhancements-confirm-style",b.textContent=`
                        @keyframes fadeIn {
                            from { opacity: 0; }
                            to { opacity: 1; }
                        }
                        @keyframes slideDown {
                            from { opacity: 0; transform: translateY(-20px); }
                            to { opacity: 1; transform: translateY(0); }
                        }
                        @keyframes fadeOut {
                            from { opacity: 1; }
                            to { opacity: 0; }
                        }
                    `,document.head.appendChild(b)}const w=b=>{a.style.animation="fadeOut 0.15s ease-out",setTimeout(()=>{a.remove(),i(b)},150)};d.addEventListener("click",()=>w(!1)),f.addEventListener("click",()=>w(!0)),a.addEventListener("click",b=>{b.target===a&&w(!1)});const S=b=>{b.key==="Escape"&&(document.removeEventListener("keydown",S),w(!1))};document.addEventListener("keydown",S),r.appendChild(d),r.appendChild(f),c.appendChild(l),c.appendChild(r),a.appendChild(c),document.body.appendChild(a),f.focus()})},scanDOM(e="#expert-enhancements-overlay *"){const t={classes:new Map,ids:new Set,dataAttributes:new Set},o=`*:not(${e})`;return document.querySelectorAll(o).forEach(n=>{n.classList&&n.classList.length>0&&n.classList.forEach(i=>{const a=t.classes.get(i)||0;t.classes.set(i,a+1)}),n.id&&n.id.length>0&&t.ids.add(n.id),n.attributes&&Array.from(n.attributes).forEach(i=>{i.name.startsWith("data-")&&t.dataAttributes.add(i.name)})}),t},showInlineConfirmation(e,t){e.classList.add("confirming");const o=e.textContent,s=e.style.color,n=e.offsetHeight+"px",i=e.style.minHeight;e.innerHTML="",e.style.display="flex",e.style.alignItems="stretch",e.style.gap="0",e.style.justifyContent="space-between",e.style.padding="0",e.style.height=n,e.style.minHeight=n;const a=document.createElement("span");a.textContent="Confirm?",a.style.fontSize="0.7rem",a.style.display="flex",a.style.alignItems="center",a.style.paddingLeft="1rem",a.style.paddingRight="0.5rem",a.style.flex="1";const c=document.createElement("span");c.style.display="flex",c.style.alignItems="stretch",c.style.marginLeft="auto";const l=document.createElement("span");l.textContent="✓",l.className="confirm-tick",l.style.cursor="pointer",l.style.padding="0 0.75rem",l.style.borderRadius="0",l.style.background="rgba(76, 175, 80, 0.2)",l.style.color="#4caf50",l.style.fontWeight="bold",l.style.display="flex",l.style.alignItems="center",l.style.justifyContent="center",l.style.minWidth="2.5rem",l.style.transition="all 0.15s";const r=document.createElement("span");r.textContent="×",r.className="confirm-cross",r.style.cursor="pointer",r.style.padding="0 0.75rem",r.style.borderRadius="0",r.style.background="rgba(244, 67, 54, 0.2)",r.style.color="#f44336",r.style.fontWeight="bold",r.style.fontSize="1.2rem",r.style.lineHeight="1",r.style.display="flex",r.style.alignItems="center",r.style.justifyContent="center",r.style.minWidth="2.5rem",r.style.transition="all 0.15s",l.addEventListener("mouseenter",()=>{l.style.background="rgba(76, 175, 80, 0.35)"}),l.addEventListener("mouseleave",()=>{l.style.background="rgba(76, 175, 80, 0.2)"}),r.addEventListener("mouseenter",()=>{r.style.background="rgba(244, 67, 54, 0.35)"}),r.addEventListener("mouseleave",()=>{r.style.background="rgba(244, 67, 54, 0.2)"}),c.appendChild(l),c.appendChild(r),e.appendChild(a),e.appendChild(c);const d=()=>{e.classList.remove("confirming"),e.textContent=o,e.style.color=s,e.style.display="",e.style.alignItems="",e.style.gap="",e.style.justifyContent="",e.style.padding="",e.style.height="",e.style.minHeight=i};l.addEventListener("click",u=>{u.stopPropagation(),d(),t()}),r.addEventListener("click",u=>{u.stopPropagation(),d()});const f=u=>{e.contains(u.target)||(d(),document.removeEventListener("click",f))};setTimeout(()=>{document.addEventListener("click",f)},100)},showNoChangesMessage(e){e.classList.add("showing-no-changes");const t=e.textContent,o=e.style.color,s=e.offsetHeight+"px",n=e.style.minHeight,i=e.style.fontSize,a=e.style.background;e.innerHTML="",e.style.display="flex",e.style.alignItems="center",e.style.justifyContent="flex-start",e.style.padding="0.5rem 0.75rem",e.style.height=s,e.style.minHeight=s,e.style.color="#ff9800",e.style.cursor="default",e.textContent="No changes",e.style.background="rgba(255, 152, 0, 0.15)",e.style.transition="background 0.3s ease",setTimeout(()=>{e.style.background=a},300);const c=()=>{e.classList.remove("showing-no-changes"),e.textContent=t,e.style.color=o,e.style.display="",e.style.alignItems="",e.style.justifyContent="",e.style.padding="",e.style.height="",e.style.minHeight=n,e.style.fontSize=i,e.style.cursor="",e.style.background=a,e.style.transition=""};setTimeout(()=>{c()},2e3);const l=r=>{e.contains(r.target)||(c(),document.removeEventListener("click",l))};setTimeout(()=>{document.addEventListener("click",l)},100)}};let x=null,ae=null,K=null,ve=null;const G={show(e="Loading...",t={}){const{timeout:o=3e4,showProgress:s=!0,onTimeout:n=null}=t;this.hide(),x=document.createElement("div"),x.className="enhancements-loading-overlay",x.setAttribute("role","status"),x.setAttribute("aria-live","polite"),x.setAttribute("aria-label",e),x.innerHTML=`
                <div class="loading-content">
                    <div class="loading-spinner"></div>
                    <div class="loading-message">${e}</div>
                    <div class="loading-progress" style="display: none;">
                        <div class="loading-progress-bar">
                            <div class="loading-progress-fill"></div>
                        </div>
                        <div class="loading-elapsed">0s</div>
                    </div>
                </div>
            `,(document.getElementById("expert-enhancements-overlay-content")||document.body).appendChild(x),ve=Date.now(),s&&(K=setInterval(()=>{const c=Math.floor((Date.now()-ve)/1e3),l=x.querySelector(".loading-progress"),r=x.querySelector(".loading-elapsed");c>=2&&l&&(l.style.display="block"),r&&(r.textContent=`${c}s`);const d=x.querySelector(".loading-progress-fill");if(d&&c>=2){const f=Math.min(90,30+(c-2)*8);d.style.width=`${f}%`}},500)),o>0&&(ae=setTimeout(()=>{console.error("[LoadingOverlay] Timeout reached"),this.showError("Loading is taking longer than expected. Please refresh the page or try again later."),n&&n()},o)),console.log("[LoadingOverlay] Shown:",e)},setMessage(e){if(!x)return;const t=x.querySelector(".loading-message");t&&(t.textContent=e,x.setAttribute("aria-label",e))},setProgress(e){if(!x)return;const t=x.querySelector(".loading-progress-fill"),o=x.querySelector(".loading-progress");t&&o&&(o.style.display="block",t.style.width=`${Math.min(100,Math.max(0,e))}%`)},hide(){ae&&(clearTimeout(ae),ae=null),K&&(clearInterval(K),K=null),x&&(x.style.opacity="0",x.style.pointerEvents="none",setTimeout(()=>{x&&x.parentNode&&x.remove(),x=null,ve=null},300))},showError(e){if(!x)return;const t=x.querySelector(".loading-content");t&&(t.innerHTML=`
                    <div class="loading-error-icon">⚠</div>
                    <div class="loading-message error">${e}</div>
                    <button class="loading-retry-btn" onclick="window.location.reload()">Reload Page</button>
                `,x.classList.add("error")),K&&(clearInterval(K),K=null),console.error("[LoadingOverlay] Error shown:",e)},isShown(){return x!==null}},E={create(e,t={},o=[]){const s=document.createElement(e);return Object.entries(t).forEach(([n,i])=>{n==="style"&&typeof i=="object"?Object.assign(s.style,i):n==="className"?s.className=i:s.setAttribute(n,i)}),o.forEach(n=>{typeof n=="string"?s.appendChild(document.createTextNode(n)):n instanceof HTMLElement&&s.appendChild(n)}),s}};let Z=!1,we=[],re=null;const xe={async init(){if(Z)return!0;if(re)throw re;return new Promise((e,t)=>{console.log("[Formatter] Loading Prettier from CDN...");const o=window.define,s=window.require;console.log("[Formatter] Temporarily hiding AMD to avoid Monaco conflict"),window.define=void 0,window.require=void 0;const n=(a,c,l=6e4)=>new Promise((r,d)=>{const f=Date.now();let u=50;const v=2e3;let w=0;const S=()=>{w++;const b=Date.now()-f;a()?(console.log(`[Formatter] ${c} is ready (${w} attempts, ${b}ms elapsed)`),r()):b>=l?d(new Error(`${c} not found after ${b}ms (${w} attempts)`)):(setTimeout(S,u),u=Math.min(u*2,v))};S()}),i=document.createElement("script");i.src="https://unpkg.com/prettier@3.6.2/standalone.js",i.onload=async()=>{console.log("[Formatter] Prettier standalone script loaded"),o&&(window.define=o),s&&(window.require=s),console.log("[Formatter] AMD restored after standalone load");try{console.log("[Formatter] Loading plugin scripts..."),window.define=void 0,window.require=void 0;const a=document.createElement("script");a.src="https://unpkg.com/prettier@3.6.2/plugins/postcss.js";const c=new Promise((d,f)=>{a.onload=()=>{console.log("[Formatter] PostCSS plugin script loaded"),o&&(window.define=o),s&&(window.require=s),d()},a.onerror=()=>{o&&(window.define=o),s&&(window.require=s),f(new Error("Failed to load PostCSS plugin"))}});document.head.appendChild(a),await c,window.define=void 0,window.require=void 0;const l=document.createElement("script");l.src="https://unpkg.com/prettier@3.6.2/plugins/html.js";const r=new Promise((d,f)=>{l.onload=()=>{console.log("[Formatter] HTML plugin script loaded"),o&&(window.define=o),s&&(window.require=s),d()},l.onerror=()=>{o&&(window.define=o),s&&(window.require=s),f(new Error("Failed to load HTML plugin"))}});document.head.appendChild(l),await r,console.log("[Formatter] All plugin scripts loaded, waiting for globals..."),await n(()=>window.prettier,"window.prettier"),await n(()=>window.prettierPlugins&&window.prettierPlugins.postcss,"prettierPlugins.postcss"),await n(()=>window.prettierPlugins&&window.prettierPlugins.html,"prettierPlugins.html"),console.log("[Formatter] All Prettier components loaded successfully"),console.log("[Formatter] Prettier version:",window.prettier.version),console.log("[Formatter] Available plugins:",Object.keys(window.prettierPlugins||{})),Z=!0,we.forEach(d=>d()),we=[],e(!0)}catch(a){console.error("[Formatter] Error during initialization:",a),o&&(window.define=o),s&&(window.require=s),re=a,t(a)}},i.onerror=()=>{const a=new Error("Failed to load Prettier standalone script");console.error("[Formatter]",a),o&&(window.define=o),s&&(window.require=s),re=a,t(a)},document.head.appendChild(i)})},isReady(){return Z},onReady(e){Z?e():we.push(e)},async formatCSS(e){if(!Z)throw new Error("Prettier not loaded. Call Formatter.init() first.");if(!window.prettier)throw new Error("Prettier global not found");if(!window.prettierPlugins)throw new Error("Prettier plugins not found");try{const t=F.getFormatterSettings(),o={parser:"css",plugins:prettierPlugins,useTabs:t.indentStyle==="tabs",tabWidth:t.indentSize,singleQuote:t.quoteStyle==="single",...t.cssSettings},s=await prettier.format(e,o);return console.log("[Formatter] CSS formatted successfully"),s.endsWith(`
`)?s.slice(0,-1):s}catch(t){throw console.error("[Formatter] CSS formatting failed:",t),new Error(`CSS formatting failed: ${t.message}`)}},async formatHTML(e){if(!Z)throw new Error("Prettier not loaded. Call Formatter.init() first.");if(!window.prettier)throw new Error("Prettier global not found");if(!window.prettierPlugins)throw new Error("Prettier plugins not found");try{const t=F.getFormatterSettings(),o={parser:"html",plugins:prettierPlugins,useTabs:t.indentStyle==="tabs",tabWidth:t.indentSize,singleQuote:t.quoteStyle==="single",...t.htmlSettings},s=await prettier.format(e,o);return console.log("[Formatter] HTML formatted successfully"),s.endsWith(`
`)?s.slice(0,-1):s}catch(t){throw console.error("[Formatter] HTML formatting failed:",t),new Error(`HTML formatting failed: ${t.message}`)}},getSettings(){return F.getFormatterSettings()},setSettings(e){F.setFormatterSettings(e),console.log("[Formatter] Settings updated:",e)}};let y=null,I=null,N=null,le=!1,ce=!1,Le=0,Te=0,Me=0,ke=0,de=0,De=0,Ae=0,Fe=0,U=null,_=!1,H=null,Y=null;const j={create(){y=E.create("div",{id:"expert-enhancements-overlay"}),I=E.create("div",{id:"expert-enhancements-overlay-header"});const e=E.create("div",{className:"header-left"}),t=E.create("span",{className:"header-title"},["CXone Expert Enhancements"]),o=E.create("select",{className:"app-switcher",id:"app-switcher"});o.addEventListener("change",B=>{T.switchTo(B.target.value)}),e.appendChild(t),e.appendChild(o);const s=E.create("div",{className:"app-controls-container",id:"app-controls-container"});e.appendChild(s);const n=E.create("div",{className:"header-buttons"}),i=E.create("div",{className:"preset-buttons"}),a=E.create("button",{className:"header-btn preset-btn",title:"Small (50%)"});a.textContent="▢",a.addEventListener("click",()=>this.applyPresetSize("small")),Y=E.create("button",{className:"header-btn preset-btn",title:"Fullscreen (95%)"}),Y.textContent="⛶",Y.addEventListener("click",()=>this.applyPresetSize("fullscreen"));const c=E.create("button",{className:"header-btn preset-btn split-btn"}),l=E.create("span",{className:"split-half split-left",title:"Split Left (30%)"}),r=E.create("span",{className:"split-indicator"});l.appendChild(r),l.addEventListener("click",B=>{B.stopPropagation(),this.applyPresetSize("split-left")});const d=E.create("span",{className:"split-half split-right",title:"Split Right (30%)"}),f=E.create("span",{className:"split-indicator"});d.appendChild(f),d.addEventListener("click",B=>{B.stopPropagation(),this.applyPresetSize("split-right")}),c.appendChild(l),c.appendChild(d),i.appendChild(a),i.appendChild(Y),i.appendChild(c);const u=E.create("button",{className:"header-btn",title:"Minimize"});u.textContent="−",u.addEventListener("click",()=>this.toggle()),n.appendChild(i),n.appendChild(u),I.appendChild(e),I.appendChild(n),N=E.create("div",{id:"expert-enhancements-overlay-content"});const v=E.create("div",{className:"enhancements-resize-handle left"}),w=E.create("div",{className:"enhancements-resize-handle right"}),S=E.create("div",{className:"enhancements-resize-handle bottom"}),b=E.create("div",{className:"enhancements-resize-handle corner-right"}),O=E.create("div",{className:"enhancements-resize-handle corner-left"});y.appendChild(I),y.appendChild(N),y.appendChild(v),y.appendChild(w),y.appendChild(S),y.appendChild(b),y.appendChild(O),document.body.appendChild(y),y.addEventListener("wheel",B=>{B.stopPropagation()},{passive:!0}),T.setContainer(N),this.attachDragListeners(),this.attachResizeListeners(v,w,S,b,O),this.attachWindowResizeListener(),this.setupDropZone(),this.restoreDimensions(),requestAnimationFrame(()=>{requestAnimationFrame(()=>{this.checkPresetButtonsVisibility()})})},attachDragListeners(){I.addEventListener("mousedown",e=>{if(e.target.tagName==="BUTTON"||e.target.tagName==="SELECT")return;le=!0,Le=e.clientX,Te=e.clientY;const t=y.getBoundingClientRect();Me=t.left,ke=t.top,I.style.cursor="grabbing",e.preventDefault()}),document.addEventListener("mousemove",e=>{if(!le)return;const t=e.clientX-Le,o=e.clientY-Te;y.style.left=Me+t+"px",y.style.top=ke+o+"px",y.style.transform="none"}),document.addEventListener("mouseup",()=>{le&&(le=!1,I.style.cursor="move",this.saveDimensions())}),I.addEventListener("dblclick",e=>{e.target.tagName==="BUTTON"||e.target.tagName==="SELECT"||this.toggleFullscreen()})},attachResizeListeners(e,t,o,s,n){let i=0,a=0;const c=()=>{const r=T.getCurrentApp(),d={minWidth:420,minHeight:300};return r?.constraints?{...d,...r.constraints}:d},l=(r,d)=>{_&&(_=!1,H=null,F.setCommonState({isFullscreen:!1,preFullscreenDimensions:null})),ce=!0,U=d,Ae=r.clientX,Fe=r.clientY;const f=y.getBoundingClientRect();de=f.width,De=f.height,i=f.left,a=f.top,r.target.classList.add("resizing"),r.preventDefault()};e.addEventListener("mousedown",r=>l(r,"left")),t.addEventListener("mousedown",r=>l(r,"right")),o.addEventListener("mousedown",r=>l(r,"bottom")),s.addEventListener("mousedown",r=>l(r,"corner-right")),n.addEventListener("mousedown",r=>l(r,"corner-left")),document.addEventListener("mousemove",r=>{if(!ce)return;const d=r.clientX-Ae,f=r.clientY-Fe,u=window.innerWidth,v=window.innerHeight,w=c();if(U==="right"||U==="corner-right"){const S=u-i,b=Math.max(w.minWidth,Math.min(de+d,S));y.style.width=b+"px"}if(U==="left"||U==="corner-left"){let S=de-d,b=i+d;const O=i+de;b=Math.max(0,Math.min(b,O-w.minWidth)),S=O-b,S<w.minWidth&&(S=w.minWidth,b=O-w.minWidth),y.style.width=S+"px",y.style.left=b+"px",y.style.transform="none"}if(U==="bottom"||U==="corner-right"||U==="corner-left"){const S=v-a,b=Math.max(w.minHeight,Math.min(De+f,S));y.style.height=b+"px"}T.notifyResize(),this.checkPresetButtonsVisibility()}),document.addEventListener("mouseup",()=>{ce&&(document.querySelectorAll(".enhancements-resize-handle").forEach(r=>{r.classList.remove("resizing")}),ce=!1,U=null,this.saveDimensions(),T.notifyResize(),this.checkPresetButtonsVisibility())})},attachWindowResizeListener(){window.addEventListener("resize",()=>{_&&this.applyFullscreen()})},setupDropZone(){if(!N)return;const e=E.create("div",{id:"file-drop-zone"});e.style.cssText=`
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: rgba(255, 255, 255, 0.1);
                backdrop-filter: blur(4px);
                z-index: 100000;
                display: none;
                align-items: center;
                justify-content: center;
                pointer-events: none;
            `;const t=E.create("div",{className:"drop-zone-content"}),o=E.create("div",{className:"drop-icon"},["📁"]),s=E.create("div",{className:"drop-text"},["Drop your file here"]),n=E.create("div",{className:"drop-subtext"},["Supports .css and .html files"]);t.appendChild(o),t.appendChild(s),t.appendChild(n),e.appendChild(t),N.appendChild(e),console.log("[Drop Zone] Created and appended, initial display:",e.style.display),console.log("[Drop Zone] Parent:",e.parentElement?.id),console.log("[Drop Zone] Has children:",e.children.length);let i=0;N.addEventListener("dragenter",a=>{a.preventDefault(),i++,i===1&&(e.style.display="flex",e.style.pointerEvents="auto",e.style.opacity="1",e.style.visibility="visible")},!0),N.addEventListener("dragover",a=>{a.preventDefault()},!0),N.addEventListener("dragleave",a=>{a.preventDefault(),i--,i===0&&(e.style.display="none",e.style.pointerEvents="none")},!0),N.addEventListener("drop",a=>{a.preventDefault(),i=0,e.style.display="none",e.style.pointerEvents="none";const c=a.dataTransfer.files;c&&c.length>0&&Se.handleDrop(c)},!0),document.addEventListener("keydown",a=>{a.key==="Escape"&&e.style.display==="flex"&&(i=0,e.style.display="none",e.style.pointerEvents="none")})},toggle(){if(!y)return;const e=y.style.display==="flex";y.style.display=e?"none":"flex",F.setCommonState({overlayOpen:!e}),e||setTimeout(()=>{T.notifyResize(),this.checkPresetButtonsVisibility()},50)},saveDimensions(){if(!y)return;const e={width:y.style.width,height:y.style.height,left:y.style.left,top:y.style.top};F.setCommonState({overlayDimensions:e})},restoreDimensions(){if(!y)return;const e=F.getCommonState();if(e.isFullscreen){_=!0,H=e.preFullscreenDimensions||null,this.applyFullscreen(),this.updateFullscreenButtonState(),setTimeout(()=>this.checkPresetButtonsVisibility(),100);return}const t=e.overlayDimensions;t&&(t.width&&(y.style.width=t.width),t.height&&(y.style.height=t.height),t.left&&(y.style.left=t.left,y.style.transform="none"),t.top&&(y.style.top=t.top,y.style.transform="none")),setTimeout(()=>this.checkPresetButtonsVisibility(),100)},toggleFullscreen(){y&&(_?this.exitFullscreen():this.enterFullscreen())},enterFullscreen(){y&&(H={width:y.style.width,height:y.style.height,left:y.style.left,top:y.style.top,transform:y.style.transform},this.applyFullscreen(),_=!0,this.updateFullscreenButtonState(),F.setCommonState({isFullscreen:!0,preFullscreenDimensions:H}),setTimeout(()=>{T.notifyResize(),this.checkPresetButtonsVisibility()},50))},exitFullscreen(){!y||!H||(y.style.width=H.width,y.style.height=H.height,y.style.left=H.left,y.style.top=H.top,y.style.transform=H.transform,_=!1,H=null,this.updateFullscreenButtonState(),F.setCommonState({isFullscreen:!1,preFullscreenDimensions:null}),setTimeout(()=>{T.notifyResize(),this.checkPresetButtonsVisibility()},50))},applyFullscreen(){y&&(y.style.width="95vw",y.style.height="95vh",y.style.left="2.5vw",y.style.top="2.5vh",y.style.transform="none")},updateFullscreenButtonState(){Y&&(_?Y.classList.add("fullscreen-active"):Y.classList.remove("fullscreen-active"))},applyPresetSize(e){if(!y)return;console.log(`[Overlay] Applying preset size: ${e}`),_&&e!=="fullscreen"&&(_=!1,H=null,this.updateFullscreenButtonState(),F.setCommonState({isFullscreen:!1,preFullscreenDimensions:null}));const t=T.getCurrentApp(),o={minWidth:420,minHeight:300},s=t?.constraints?{...o,...t.constraints}:o,n=window.innerWidth,i=window.innerHeight;switch(e){case"small":const a=Math.max(n*.5,s.minWidth),c=Math.max(i*.5,s.minHeight);y.style.width=a+"px",y.style.height=c+"px",y.style.left=(n-a)/2+"px",y.style.top=(i-c)/2+"px",y.style.transform="none";break;case"fullscreen":if(_){this.exitFullscreen();return}else{this.enterFullscreen();return}case"split-left":const l=Math.max(n*.3,s.minWidth),r=Math.max(i*.95,s.minHeight);y.style.width=l+"px",y.style.height=r+"px",y.style.left=n*.025+"px",y.style.top=(i-r)/2+"px",y.style.transform="none";break;case"split-right":const d=Math.max(n*.3,s.minWidth),f=Math.max(i*.95,s.minHeight);y.style.width=d+"px",y.style.height=f+"px",y.style.left=n-d-n*.025+"px",y.style.top=(i-f)/2+"px",y.style.transform="none";break;default:console.warn(`[Overlay] Unknown preset: ${e}`);return}this.saveDimensions(),setTimeout(()=>{T.notifyResize()},50),this.checkPresetButtonsVisibility()},checkPresetButtonsVisibility(){if(!y)return;const e=document.querySelector(".preset-buttons");if(!e)return;y.offsetWidth<620?e.style.display!=="none"&&(e.style.display="none"):e.style.display!=="flex"&&(e.style.display="flex")},updateAppSwitcher(){const e=document.getElementById("app-switcher");if(!e)return;e.innerHTML="",T.getApps().forEach(o=>{const s=E.create("option",{value:o.id},[o.name]);e.appendChild(s)});const t=T.getCurrentApp();t&&(e.value=t.id)},setAppControls(e){const t=document.getElementById("app-controls-container");t&&(t.innerHTML="",Array.isArray(e)&&e.forEach(o=>t.appendChild(o)))},clearAppControls(){const e=document.getElementById("app-controls-container");e&&(e.innerHTML="")}},Se={async handleDrop(e){if(e.length>1){R.showToast("Please drop only one file at a time","error");return}const t=e[0],o=t.name.toLowerCase().split(".").pop();if(o!=="css"&&o!=="html"){R.showToast("Please drop a .css or .html file","error");return}const s=5*1024*1024;if(t.size>s){R.showToast(`File too large. Maximum size is 5MB (file is ${(t.size/1024/1024).toFixed(2)}MB)`,"error");return}if(t.size===0){R.showToast("Cannot import empty file","error");return}const n=o==="css"?"css-editor":"html-editor",i=T.getCurrentApp();if(!i||i.id!==n){R.showToast(`Switching to ${o.toUpperCase()} Editor...`,"info",2e3);try{await T.switchTo(n),await new Promise(a=>setTimeout(a,100)),T.notifyResize()}catch(a){R.showToast(`Failed to switch to ${o.toUpperCase()} Editor: ${a.message}`,"error");return}}G.show(`Reading ${t.name}...`);try{const a=await this.readFileAsText(t),c=T.getCurrentApp();if(c&&typeof c.importFile=="function"){await c.importFile(a,t.name);const l=document.getElementById("file-drop-zone");l&&(l.style.display="none",l.style.pointerEvents="none"),document.querySelectorAll(".role-selector-backdrop").forEach(d=>{d.parentNode&&d.parentNode.removeChild(d)})}else G.hide(),R.showToast("Current app does not support file import","error")}catch(a){G.hide(),R.showToast(`Failed to read file: ${a.message}`,"error")}},readFileAsText(e){return new Promise((t,o)=>{const s=new FileReader;s.onload=n=>t(n.target.result),s.onerror=()=>o(new Error("Failed to read file")),s.readAsText(e)})},showRoleSelector(e,t){return new Promise(o=>{const s=E.create("div",{className:"role-selector-backdrop",style:"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 9999999; display: flex; align-items: center; justify-content: center;"}),n=E.create("div",{className:"role-selector-dialog",style:"background: white; padding: 20px; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.3); max-width: 400px; width: 90%;"}),i=E.create("h3",{style:"margin: 0 0 16px 0; font-size: 18px; color: #333;"},[`Import ${t.toUpperCase()} File`]),a=E.create("p",{style:"margin: 0 0 16px 0; font-size: 14px; color: #666;"},["Select which editor to import into:"]),c=E.create("form");e.forEach((u,v)=>{const w=E.create("label",{style:"display: flex; align-items: center; margin-bottom: 12px; cursor: pointer; font-size: 14px; color: #333;"}),S=E.create("input",{type:"radio",name:"role",value:u.id,style:"margin-right: 8px;"});v===0&&(S.checked=!0);const b=document.createTextNode(u.label);w.appendChild(S),w.appendChild(b),c.appendChild(w)});const l=E.create("div",{style:"display: flex; gap: 8px; justify-content: flex-end; margin-top: 20px;"}),r=E.create("button",{type:"button",style:"padding: 8px 16px; border: 1px solid #ccc; background: white; color: #333; border-radius: 4px; cursor: pointer; font-size: 14px;"},["Cancel"]),d=E.create("button",{type:"submit",style:"padding: 8px 16px; border: none; background: #2196F3; color: white; border-radius: 4px; cursor: pointer; font-size: 14px;"},["Import"]),f=()=>{try{s.parentNode&&s.parentNode.removeChild(s)}catch(u){console.error("[FileImport] Error removing dialog:",u)}};r.addEventListener("click",()=>{f(),o(null)}),c.addEventListener("submit",u=>{u.preventDefault();const v=c.querySelector('input[name="role"]:checked').value;f(),o(v)}),l.appendChild(r),l.appendChild(d),c.appendChild(l),n.appendChild(i),n.appendChild(a),n.appendChild(c),s.appendChild(n),document.body.appendChild(s),c.querySelector('input[type="radio"]').focus()})}},Oe="1.0.0";console.log("[Enhancements Core] Initialized successfully"),window.ExpertEnhancements={AppManager:T,Monaco:ye,API:Ce,Storage:F,UI:R,DOM:E,Overlay:j,LoadingOverlay:G,FileImport:Se,Formatter:xe,version:Oe},console.log("[CSS Editor App] Loading...");const pe=[{id:"all",label:"All Roles"},{id:"anonymous",label:"Anonymous"},{id:"viewer",label:"Community Member"},{id:"seated",label:"Pro Member"},{id:"admin",label:"Admin"},{id:"grape",label:"Legacy Browser"}],$e=3;let m=null,g={},L={},me="",k={},Q=!1,J=null,$=!1,q="anonymous",P=null,ge=null;const Pe={id:"css-editor",name:"CSS Editor",constraints:{minWidth:420,minHeight:300},async init(e){console.log("[CSS Editor] Initializing..."),m=e,pe.forEach(t=>{g[t.id]={active:!1,editor:null,content:"",label:t.label,isDirty:!1}}),await m.Monaco.init(),console.log("[CSS Editor] Initialized")},async mount(e){console.log("[CSS Editor] Mounting..."),e.innerHTML=`
                <div class="enhancements-app-container">
                    <div id="message-area"></div>
                    <div id="css-editor-container" style="display: none;">
                        <div class="toggle-bar" id="toggle-bar">
                            <div class="save-dropdown">
                                <button class="btn btn-primary" id="save-btn">Save All</button>
                                <button class="btn btn-dropdown-toggle" id="save-dropdown-toggle">▼</button>
                                <div class="dropdown-menu" id="save-dropdown-menu">
                                    <button class="dropdown-item" id="discard-btn">Discard All</button>
                                </div>
                            </div>
                        </div>
                        <div id="editors-grid" class="editors-grid"></div>
                    </div>
                </div>
            `,m.LoadingOverlay.show("Loading CSS from system...",{timeout:3e4,showProgress:!0});try{m.Formatter.init().then(()=>{console.log("[CSS Editor] Code formatter loaded successfully"),this.injectFormatButtons()}).catch(n=>{console.warn("[CSS Editor] Code formatter unavailable:",n)});const t=m.Storage.getAppState(this.id);let o=!1;t&&(console.log("[CSS Editor] Restoring state:",t),m.LoadingOverlay.setMessage("Restoring saved state..."),this.setState(t),o=t.isDirty&&Object.values(t.isDirty).some(n=>n),console.log("[CSS Editor] Has dirty edits in saved state:",o)),o?m.LoadingOverlay.setMessage("Loading saved edits..."):m.LoadingOverlay.setMessage("Fetching CSS from server..."),await this.loadData(o),this.buildToggleBar(),m.LoadingOverlay.setMessage("Initializing Monaco editors...");const s=!!t;console.log("[CSS Editor] Initializing editors, skip default:",s),this.initializeEditors(s),this.setupSaveDropdown(),this.setupKeyboardShortcuts(),this.createLivePreviewControls(),m.LoadingOverlay.hide(),console.log("[CSS Editor] Mounted")}catch(t){throw console.error("[CSS Editor] Mount failed:",t),m.LoadingOverlay.showError("Failed to load CSS Editor: "+t.message),t}},async unmount(){console.log("[CSS Editor] Unmounting..."),this.clearLivePreview(),P&&P.parentNode&&(P.remove(),P=null),J&&(document.removeEventListener("keydown",J),J=null),Object.values(k).forEach(e=>{e&&e.dispose()}),k={},console.log("[CSS Editor] Unmounted")},onResize(){this.checkViewportWidth(),this.checkOverlayWidth(),this.updateHeights()},checkOverlayWidth(){const e=document.getElementById("expert-enhancements-overlay");if(!e)return;const t=e.offsetWidth,o=document.querySelector(".live-preview-role-selector");o&&(t<480?o.style.display="none":o.style.display="")},getState(){const e={activeRoles:Object.keys(g).filter(t=>g[t].active),content:{},isDirty:{},originalContent:{},livePreview:{enabled:$,selectedRole:q}};return Object.keys(g).forEach(t=>{const o=g[t];e.content[t]=o.content,e.isDirty[t]=o.isDirty,e.originalContent[t]=L[t]}),e},setState(e){e&&(e.activeRoles&&e.activeRoles.forEach(t=>{g[t]&&(g[t].active=!0)}),e.content&&Object.keys(e.content).forEach(t=>{g[t]&&(g[t].content=e.content[t])}),e.isDirty&&Object.keys(e.isDirty).forEach(t=>{g[t]&&(g[t].isDirty=e.isDirty[t])}),e.originalContent&&Object.keys(e.originalContent).forEach(t=>{L[t]=e.originalContent[t]}),e.livePreview&&($=e.livePreview.enabled||!1,q=e.livePreview.selectedRole||"anonymous",console.log("[CSS Editor] Restored live preview state:",e.livePreview)))},async loadData(e=!1){try{const o=await m.API.fetch("/deki/cp/custom_css.php?params=%2F");if(!o.ok)throw new Error(`HTTP ${o.status}`);const s=await o.text(),{doc:n,data:i}=m.API.parseFormHTML(s);me=i.csrf_token,e||Object.entries({css_template_all:"all",css_template_anonymous:"anonymous",css_template_viewer:"viewer",css_template_seated:"seated",css_template_admin:"admin",css_template_grape:"grape"}).forEach(([c,l])=>{const r=n.querySelector(`textarea[name="${c}"]`);if(r){const d=r.textContent;g[l].content=d,L[l]=d}}),document.getElementById("css-editor-container").style.display="block",console.log("[CSS Editor] Data loaded")}catch(t){console.error("[CSS Editor] Failed to load data:",t),m.UI.showToast("Failed to load CSS: "+t.message,"error")}},checkViewportWidth(){const e=Q,t=document.getElementById("expert-enhancements-overlay");if(t&&(Q=t.offsetWidth<920),e!==Q){if(this.buildToggleBar(),Q){const o=Object.keys(g).filter(s=>g[s].active);o.length>1&&(o.slice(1).forEach(s=>{g[s].active=!1}),this.updateGrid(),this.saveState())}this.updateToggleButtons()}return Q},buildToggleBar(){const e=document.getElementById("toggle-bar");if(!e)return;if(e.querySelectorAll(".toggle-btn, .mobile-selector-wrapper").forEach(o=>o.remove()),Q){const o=document.createElement("div");o.className="mobile-selector-wrapper";const s=document.createElement("label");s.htmlFor="mobile-editor-select",s.textContent="Editor: ",s.className="mobile-selector-label";const n=document.createElement("select");n.id="mobile-editor-select",n.className="mobile-editor-select",pe.forEach(({id:c,label:l})=>{const r=g[c],d=document.createElement("option");d.value=c;const f=r.isDirty?"● ":"✓ ";d.textContent=f+l,d.setAttribute("data-role",c),n.appendChild(d)});let i=Object.keys(g).find(c=>g[c].active);if(!i){const c=pe[0].id;g[c].active=!0,i=c,setTimeout(()=>{this.updateGrid(),this.saveState()},0)}n.value=i,n.addEventListener("change",c=>this.handleMobileEditorChange(c.target.value)),o.appendChild(s),o.appendChild(n);const a=e.firstChild;e.insertBefore(o,a)}else pe.forEach(({id:o,label:s})=>{const n=document.createElement("button");n.className="toggle-btn",n.setAttribute("data-role",o),n.textContent=s,n.addEventListener("click",a=>this.toggleEditor(o,a));const i=e.querySelector(".save-dropdown");e.insertBefore(n,i)});this.updateToggleButtons()},handleMobileEditorChange(e){console.log(`[CSS Editor] handleMobileEditorChange to: ${e}`);const t=Object.keys(g).find(s=>g[s].active);if(e===t)return;Object.keys(g).forEach(s=>{g[s].active=!1}),g[e].active=!0,this.updateGrid(),this.saveState(),document.getElementById("mobile-editor-select")&&this.updateToggleButtons()},setupSaveDropdown(){const e=document.getElementById("save-btn"),t=document.getElementById("discard-btn"),o=document.getElementById("save-dropdown-toggle"),s=document.getElementById("save-dropdown-menu"),n=document.querySelector(".save-dropdown");e&&e.addEventListener("click",()=>this.saveAll()),t&&t.addEventListener("click",i=>{i.stopPropagation(),this.discardAll()}),o&&s&&n&&o.addEventListener("click",i=>{i.stopPropagation(),s.classList.toggle("show"),n.classList.toggle("open")}),document.addEventListener("click",i=>{n&&s&&!n.contains(i.target)&&(s.classList.remove("show"),n.classList.remove("open")),i.target.closest(".editor-save-dropdown")||document.querySelectorAll(".editor-save-dropdown-menu.show").forEach(a=>{a.classList.remove("show")})})},toggleEditor(e,t){const o=g[e];if(!o)return;const s=Object.values(g).filter(i=>i.active).length;if(t&&t.shiftKey)if(o.active)o.active=!1;else{if(s>=$e){m.UI.showToast(`Maximum ${$e} editors can be open at once`,"warning");return}o.active=!0}else{if(o.active&&s===1)return;Object.keys(g).forEach(i=>{g[i].active=!1}),o.active=!0}this.updateGrid(),this.updateToggleButtons(),this.saveState()},saveState(){const e=this.getState();m.Storage.setAppState(this.id,e)},updateGrid(){const e=document.getElementById("editors-grid");if(!e)return;const t=Object.keys(g).filter(o=>g[o].active);e.innerHTML="",e.className="editors-grid cols-"+t.length,t.forEach(o=>{const s=this.createEditorPane(o);e.appendChild(s)}),setTimeout(()=>{this.updateHeights()},50)},updateHeights(){const e=document.getElementById("css-editor-container"),t=document.querySelector(".toggle-bar"),o=document.getElementById("editors-grid");if(!e||!t||!o)return;const s=e.offsetHeight,n=t.offsetHeight,i=s-n;o.style.height=i+"px",o.querySelectorAll(".editor-pane").forEach(c=>{c.style.height=i+"px";const l=c.querySelector(".editor-pane-header"),r=c.querySelector(".editor-instance");if(l&&r){const d=l.offsetHeight,f=i-d;r.style.height=f+"px"}}),Object.values(k).forEach(c=>{c&&c.layout()})},createEditorPane(e){const t=g[e],o=m.DOM.create("div",{className:"editor-pane"}),s=m.DOM.create("div",{className:"editor-pane-header"}),n=m.DOM.create("div",{className:"header-left",style:{display:"flex",alignItems:"center",gap:"0.5rem"}}),i=m.DOM.create("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem"}}),a=m.DOM.create("span",{},[t.label]),c=m.DOM.create("span",{className:"editor-status",id:`status-${e}`,style:{fontSize:"0.9rem"}},[t.isDirty?"●":"✓"]);i.appendChild(c),i.appendChild(a),n.appendChild(i);const l=m.DOM.create("div",{className:"header-right",style:{display:"flex",alignItems:"center",gap:"0.5rem"}}),r=m.DOM.create("div",{className:"editor-save-dropdown"}),d=m.DOM.create("button",{className:"editor-pane-save","data-save-role":e},["Save"]);d.addEventListener("click",()=>this.saveRole(e));const f=m.DOM.create("button",{className:"editor-save-dropdown-toggle","data-dropdown-role":e},["▼"]);f.addEventListener("click",C=>{C.stopPropagation(),this.toggleEditorDropdown(e)});const u=m.DOM.create("div",{className:"editor-save-dropdown-menu","data-menu-role":e}),v=m.DOM.create("button",{className:"editor-dropdown-item","data-revert-role":e},["Revert this"]);v.addEventListener("click",C=>{C.stopPropagation(),this.revertRole(e)}),u.appendChild(v),r.appendChild(d),r.appendChild(f),r.appendChild(u);const w=m.DOM.create("div",{className:"editor-actions-dropdown",style:{position:"relative"}}),S=m.DOM.create("button",{className:"editor-actions-btn","data-actions-role":e},["Actions ▼"]);S.addEventListener("click",C=>{C.stopPropagation(),this.toggleActionsDropdown(e)});const b=m.DOM.create("div",{className:"editor-actions-menu","data-actions-menu-role":e});if(m.Formatter.isReady()){const C=m.DOM.create("button",{className:"editor-actions-item","data-format-role":e},["Format"]);C.addEventListener("click",be=>{be.stopPropagation(),this.formatRole(e),this.toggleActionsDropdown(e)}),b.appendChild(C)}const O=m.DOM.create("input",{type:"file",accept:".css",style:"display: none;",id:`file-input-${e}`});O.addEventListener("change",C=>{C.target.files&&C.target.files[0]&&(this.importRole(e,C.target.files[0]),C.target.value="")});const B=m.DOM.create("button",{className:"editor-actions-item","data-import-role":e},["Import"]);B.addEventListener("click",C=>{C.stopPropagation(),O.click(),this.toggleActionsDropdown(e)});const ne=m.DOM.create("button",{className:"editor-actions-item","data-export-role":e},["Export"]);ne.addEventListener("click",C=>{C.stopPropagation(),this.exportRole(e),this.toggleActionsDropdown(e)}),b.appendChild(B),b.appendChild(ne),w.appendChild(S),w.appendChild(b),l.appendChild(r),l.appendChild(w),s.appendChild(n),s.appendChild(l),o.appendChild(s),o.appendChild(O);const se=m.DOM.create("div",{className:"editor-instance",id:`editor-${e}`});return o.appendChild(se),m.Monaco.isReady()&&this.createMonacoEditor(e,se),o},createMonacoEditor(e,t){const o=g[e],n=m.Monaco.get().editor.create(t,{value:o.content||"",language:"css",theme:"vs-dark",automaticLayout:!1,minimap:{enabled:!0},fontSize:14,wordWrap:"on",scrollBeyondLastLine:!1});k[e]=n,n.onDidChangeModelContent(()=>{o.content=n.getValue(),o.isDirty=o.content!==L[e],this.updateToggleButtons(),this.updateLivePreview()}),console.log(`[CSS Editor] Created Monaco editor for: ${e}`)},initializeEditors(e=!1){const t=Object.values(g).some(o=>o.active);!e&&!t?(g.all.active=!0,console.log("[CSS Editor] No saved state, activating default: all")):console.log("[CSS Editor] Skipping default activation, skipDefault:",e,"hasActive:",t),this.updateGrid()},updateToggleButtons(){document.querySelectorAll(".toggle-btn").forEach(o=>{const s=o.getAttribute("data-role"),n=g[s];n&&n.active?o.classList.add("active"):o.classList.remove("active"),n&&n.isDirty?(o.style.fontWeight="bold",o.style.color="#ff9800"):(o.style.fontWeight="",o.style.color="")});const t=document.getElementById("mobile-editor-select");if(t){t.querySelectorAll("option[data-role]").forEach(n=>{const i=n.getAttribute("data-role");if(i&&g[i]){const a=g[i],c=a.isDirty?"● ":"✓ ";n.textContent=c+a.label}});const s=Object.keys(g).find(n=>g[n].active);s&&(t.value=s)}Object.keys(g).forEach(o=>{const s=document.getElementById(`status-${o}`);if(s){const n=g[o];s.textContent=n.isDirty?"●":"✓",s.style.color=n.isDirty?"#ff9800":"#4caf50"}})},exportRole(e){const t=g[e];if(t)try{const o=t.content||"",s=new Blob([o],{type:"text/css"}),n=URL.createObjectURL(s),i=document.createElement("a");i.href=n,i.download=`css_template_${e}.css`,i.click(),URL.revokeObjectURL(n),m.UI.showToast(`Exported ${t.label}`,"success")}catch(o){m.UI.showToast(`Failed to export: ${o.message}`,"error")}},importRole(e,t){const o=g[e];if(!o)return;if(!t.name.endsWith(".css")){m.UI.showToast("Please select a CSS file (.css)","error");return}const s=5*1024*1024;if(t.size>s){m.UI.showToast(`File too large. Maximum size is 5MB (file is ${(t.size/1024/1024).toFixed(2)}MB)`,"error");return}if(t.size===0){m.UI.showToast("Cannot import empty file","error");return}m.LoadingOverlay.show(`Importing ${t.name}...`);const n=new FileReader;n.onload=i=>{try{const a=i.target.result,c=`

/* ========================================
   Imported from: ${t.name}
   Date: ${new Date().toLocaleString()}
   ======================================== */
`,r=(o.content||"")+c+a;if(o.content=r,o.isDirty=!0,k[e]){const d=k[e],f=d.getModel(),u=f.getLineCount(),v=f.getLineLength(u);d.executeEdits("import",[{range:new monaco.Range(u,v+1,u,v+1),text:c+a}])}this.saveState(),this.updateToggleButtons(),m.LoadingOverlay.hide(),m.UI.showToast(`Content from ${t.name} appended to ${o.label}`,"success",5e3)}catch(a){m.LoadingOverlay.hide(),m.UI.showToast(`Failed to import: ${a.message}`,"error")}},n.onerror=()=>{m.LoadingOverlay.hide(),m.UI.showToast("Failed to read file","error")},n.readAsText(t)},async importFile(e,t){try{m.LoadingOverlay.hide();const o=Object.keys(g).map(l=>({id:l,label:g[l].label})),s=await m.FileImport.showRoleSelector(o,"css");if(!s){m.LoadingOverlay.hide(),m.UI.showToast("Import cancelled","info");return}const n=g[s];if(!n){m.LoadingOverlay.hide(),m.UI.showToast("Selected role not found","error");return}const i=`

/* ========================================
   Imported from: ${t}
   Date: ${new Date().toLocaleString()}
   ======================================== */
`,c=(n.content||"")+i+e;if(n.content=c,n.isDirty=!0,k[s]){const l=k[s],r=l.getModel(),d=r.getLineCount(),f=r.getLineLength(d);l.executeEdits("import",[{range:new monaco.Range(d,f+1,d,f+1),text:i+e}]),setTimeout(()=>{l.layout(),l.focus();const u=l.getDomNode();u&&(u.style.pointerEvents="auto")},50)}this.saveState(),this.updateToggleButtons(),m.LoadingOverlay.hide(),m.UI.showToast(`Content from ${t} appended to ${n.label}`,"success",5e3)}catch(o){m.LoadingOverlay.hide(),m.UI.showToast(`Failed to import: ${o.message}`,"error")}},injectFormatButtons(){console.log("[CSS Editor] Injecting format buttons into rendered panes"),document.querySelectorAll(".editor-pane").forEach(t=>{const o=t.querySelector(".editor-pane-actions"),s=t.querySelector(".editor-pane-export");if(!o||!s||t.querySelector(".editor-pane-format"))return;const n=s.getAttribute("data-export-role");if(!n)return;const i=m.DOM.create("button",{className:"editor-pane-format","data-format-role":n,title:"Format CSS (Ctrl+Shift+F)"},["Format"]);i.addEventListener("click",()=>this.formatRole(n)),o.insertBefore(i,s)})},async formatRole(e,t=!1){if(!m.Formatter.isReady())return m.UI.showToast("Code formatting is currently unavailable","warning"),null;const o=g[e],s=k[e];if(!o||!s)return null;try{console.log(`[CSS Editor] Formatting ${e}...`);const n=s.getValue();if(!n||n.trim()==="")return m.UI.showToast("Nothing to format","warning"),null;const i=await m.Formatter.formatCSS(n),a=n!==i;if(s.setValue(i),o.content=i,o.isDirty=o.content!==L[e],this.updateToggleButtons(),!t){const c=a?`${o.label} formatted`:`${o.label} already formatted`;m.UI.showToast(c,"success")}return{changed:a,label:o.label}}catch(n){return console.error(`[CSS Editor] Format ${e} failed:`,n),m.UI.showToast(`Formatting failed: ${n.message}`,"error"),null}},async formatAllActive(){if(!m.Formatter.isReady()){m.UI.showToast("Code formatting is currently unavailable","warning");return}const e=Object.keys(g).filter(t=>g[t].active);if(e.length===0){m.UI.showToast("No editors open to format","warning");return}try{console.log(`[CSS Editor] Formatting ${e.length} active editor(s)...`);const t=[];for(const i of e){const a=await this.formatRole(i,!0);a&&t.push(a)}const o=t.filter(i=>i.changed),s=o.length;let n;s===0?n=t.length===1?`${t[0].label} already formatted`:"Already formatted":s===1?n=`${o[0].label} formatted`:n=`${s} editors formatted`,m.UI.showToast(n,"success")}catch(t){console.error("[CSS Editor] Format all active failed:",t),m.UI.showToast(`Formatting failed: ${t.message}`,"error")}},discardAll(){if(console.log("[CSS Editor] discardAll called"),Object.keys(L).length===0){m.UI.showToast("No original content to revert to","warning");return}const e=Object.values(g).some(o=>o.isDirty),t=document.getElementById("discard-btn");if(console.log("[CSS Editor] discardAll - hasUnsavedChanges:",e),console.log("[CSS Editor] discardAll - discardBtn:",t),console.log("[CSS Editor] discardAll - discardBtn.classList:",t?.classList),e){t&&!t.classList.contains("confirming")?(console.log("[CSS Editor] discardAll - Showing inline confirmation"),m.UI.showInlineConfirmation(t,()=>{this.performDiscardAll()})):console.log("[CSS Editor] discardAll - Button already confirming or not found");return}t&&!t.classList.contains("showing-no-changes")&&(console.log("[CSS Editor] discardAll - Showing no changes message"),m.UI.showNoChangesMessage(t))},performDiscardAll(){console.log("[CSS Editor] performDiscardAll executing"),Object.keys(g).forEach(s=>{g[s].content=L[s]||"",g[s].isDirty=!1;const n=k[s];n&&n.setValue(g[s].content)}),this.updateToggleButtons(),Object.values(g).every(s=>!s.isDirty)?(console.log("[CSS Editor] All editors clean, clearing app state"),m.Storage.clearAppState(this.id)):this.saveState();const t=document.getElementById("save-dropdown-menu");t&&t.classList.remove("show");const o=document.querySelector(".save-dropdown");o&&o.classList.remove("open"),m.UI.showToast("All changes discarded","success")},revertRole(e){console.log(`[CSS Editor] revertRole called for: ${e}`);const t=g[e];if(!t)return;const o=document.querySelector(`[data-revert-role="${e}"]`);if(o){if(t.isDirty){o.classList.contains("confirming")||m.UI.showInlineConfirmation(o,()=>{this.performRevert(e)});return}o.classList.contains("showing-no-changes")||m.UI.showNoChangesMessage(o)}},performRevert(e){console.log(`[CSS Editor] performRevert executing for: ${e}`);const t=g[e];if(!t)return;t.content=L[e]||"",t.isDirty=!1;const o=k[e];o&&o.setValue(t.content),this.updateToggleButtons(),Object.values(g).every(i=>!i.isDirty)?(console.log("[CSS Editor] All editors clean, clearing app state"),m.Storage.clearAppState(this.id)):this.saveState();const n=document.querySelector(`[data-menu-role="${e}"]`);n&&n.classList.remove("show"),m.UI.showToast(`${t.label} reverted`,"success")},toggleEditorDropdown(e){const t=document.querySelector(`[data-menu-role="${e}"]`);if(!t)return;document.querySelectorAll(".editor-save-dropdown-menu.show").forEach(s=>{s!==t&&s.classList.remove("show")});const o=document.getElementById("save-dropdown-menu");o&&o.classList.remove("show"),t.classList.toggle("show")},toggleActionsDropdown(e){const t=document.querySelector(`[data-actions-menu-role="${e}"]`);t&&(document.querySelectorAll(".editor-actions-menu.show").forEach(o=>{o!==t&&o.classList.remove("show")}),t.classList.toggle("show"))},async saveRole(e){const t=document.querySelector(`[data-save-role="${e}"]`);if(!t)return;const o=document.getElementById("save-btn"),s=document.querySelectorAll("[data-save-role]"),n=t.textContent,i=t.disabled;try{console.log(`[CSS Editor] Saving ${e}...`);const a=g[e];if(!a)throw new Error(`Role ${e} not found`);o&&(o.disabled=!0),s.forEach(S=>S.disabled=!0),t.classList.add("saving"),t.innerHTML='<span class="spinner"></span> Saving...';const c=k[e];if(c&&(a.content=c.getValue()),m.Storage.getFormatterSettings().formatOnSave&&m.Formatter.isReady()&&a.content&&a.content.trim()!=="")try{console.log(`[CSS Editor] Auto-formatting ${e} before save...`);const S=await m.Formatter.formatCSS(a.content);a.content=S,c&&c.setValue(S)}catch(S){console.warn(`[CSS Editor] Auto-format failed for ${e}:`,S)}if(!a.isDirty&&a.content===L[e]){m.UI.showToast(`${a.label} has no changes to save`,"warning");return}const r=a.content,d={csrf_token:me,css_template_all:e==="all"?g.all.content:L.all,css_template_anonymous:e==="anonymous"?g.anonymous.content:L.anonymous,css_template_viewer:e==="viewer"?g.viewer.content:L.viewer,css_template_seated:e==="seated"?g.seated.content:L.seated,css_template_admin:e==="admin"?g.admin.content:L.admin,css_template_grape:e==="grape"?g.grape.content:L.grape},{body:f,boundary:u}=m.API.buildMultipartBody(d),w=await m.API.fetch("/deki/cp/custom_css.php?params=%2F",{method:"POST",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8","Accept-Language":"en-US,en;q=0.9","Cache-Control":"max-age=0","Content-Type":`multipart/form-data; boundary=${u}`},credentials:"include",body:f,redirect:"follow"});if(w.ok||w.redirected)m.UI.showToast(`${a.label} saved successfully!`,"success"),L[e]=r,(c?c.getValue():a.content)===r?a.isDirty=!1:(a.isDirty=!0,console.log(`[CSS Editor] ${e} content changed during save, keeping dirty state`)),this.updateToggleButtons(),this.saveState();else throw new Error(`HTTP ${w.status}`)}catch(a){console.error(`[CSS Editor] Save ${e} failed:`,a),m.UI.showToast(`Failed to save: ${a.message}`,"error")}finally{t.disabled=i,t.classList.remove("saving"),t.textContent=n,o&&(o.disabled=!1),s.forEach(a=>a.disabled=!1)}},async saveAll(){const e=document.getElementById("save-btn");if(!e)return;const t=document.querySelectorAll("[data-save-role]"),o=e.textContent,s=e.disabled;try{if(console.log("[CSS Editor] Saving all CSS..."),e.disabled=!0,t.forEach(u=>u.disabled=!0),e.classList.add("saving"),e.innerHTML='<span class="spinner"></span> Saving...',Object.keys(k).forEach(u=>{const v=k[u];v&&(g[u].content=v.getValue())}),m.Storage.getFormatterSettings().formatOnSave&&m.Formatter.isReady())for(const u of Object.keys(g)){const v=g[u];if(v.content&&v.content.trim()!=="")try{console.log(`[CSS Editor] Auto-formatting ${u} before save...`);const w=await m.Formatter.formatCSS(v.content);v.content=w;const S=k[u];S&&S.setValue(w)}catch(w){console.warn(`[CSS Editor] Auto-format failed for ${u}:`,w)}}if(!Object.keys(g).some(u=>g[u].isDirty||g[u].content!==L[u])){m.UI.showToast("No changes to save","warning");return}const a={};Object.keys(g).forEach(u=>{a[u]=g[u].content});const c={csrf_token:me,css_template_all:g.all.content,css_template_anonymous:g.anonymous.content,css_template_viewer:g.viewer.content,css_template_seated:g.seated.content,css_template_admin:g.admin.content,css_template_grape:g.grape.content},{body:l,boundary:r}=m.API.buildMultipartBody(c),f=await m.API.fetch("/deki/cp/custom_css.php?params=%2F",{method:"POST",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8","Accept-Language":"en-US,en;q=0.9","Cache-Control":"max-age=0","Content-Type":`multipart/form-data; boundary=${r}`},credentials:"include",body:l,redirect:"follow"});if(f.ok||f.redirected)m.UI.showToast("CSS saved successfully!","success"),Object.keys(g).forEach(u=>{L[u]=a[u];const v=k[u];(v?v.getValue():g[u].content)===a[u]?g[u].isDirty=!1:(g[u].isDirty=!0,console.log(`[CSS Editor] ${u} content changed during save, keeping dirty state`))}),this.updateToggleButtons(),this.saveState();else throw new Error(`HTTP ${f.status}`)}catch(n){console.error("[CSS Editor] Save failed:",n),m.UI.showToast("Failed to save CSS: "+n.message,"error")}finally{e.disabled=s,e.classList.remove("saving"),e.textContent=o,t.forEach(n=>n.disabled=!1)}},async saveOpenTabs(){const e=Object.keys(g).filter(n=>g[n].active);if(e.length===0){m.UI.showToast("No tabs open to save","warning");return}const t=document.getElementById("save-btn"),o=document.querySelectorAll("[data-save-role]"),s=new Map;t&&s.set(t,{text:t.textContent,disabled:t.disabled}),e.forEach(n=>{const i=document.querySelector(`[data-save-role="${n}"]`);i&&s.set(i,{text:i.textContent,disabled:i.disabled})});try{if(console.log(`[CSS Editor] Saving ${e.length} open tab(s):`,e),t&&(t.disabled=!0),o.forEach(u=>u.disabled=!0),e.forEach(u=>{const v=document.querySelector(`[data-save-role="${u}"]`);v&&(v.classList.add("saving"),v.innerHTML='<span class="spinner"></span> Saving...')}),e.forEach(u=>{const v=k[u];v&&(g[u].content=v.getValue())}),m.Storage.getFormatterSettings().formatOnSave&&m.Formatter.isReady())for(const u of e){const v=g[u];if(v.content&&v.content.trim()!=="")try{console.log(`[CSS Editor] Auto-formatting ${u} before save...`);const w=await m.Formatter.formatCSS(v.content);v.content=w;const S=k[u];S&&S.setValue(w)}catch(w){console.warn(`[CSS Editor] Auto-format failed for ${u}:`,w)}}if(!e.some(u=>g[u].isDirty||g[u].content!==L[u])){const u=e.length===1?g[e[0]].label:`${e.length} tabs`;m.UI.showToast(`${u} have no changes to save`,"warning");return}const a={};e.forEach(u=>{a[u]=g[u].content});const c={csrf_token:me,css_template_all:e.includes("all")?g.all.content:L.all,css_template_anonymous:e.includes("anonymous")?g.anonymous.content:L.anonymous,css_template_viewer:e.includes("viewer")?g.viewer.content:L.viewer,css_template_seated:e.includes("seated")?g.seated.content:L.seated,css_template_admin:e.includes("admin")?g.admin.content:L.admin,css_template_grape:e.includes("grape")?g.grape.content:L.grape},{body:l,boundary:r}=m.API.buildMultipartBody(c),f=await m.API.fetch("/deki/cp/custom_css.php?params=%2F",{method:"POST",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8","Accept-Language":"en-US,en;q=0.9","Cache-Control":"max-age=0","Content-Type":`multipart/form-data; boundary=${r}`},credentials:"include",body:l,redirect:"follow"});if(f.ok||f.redirected){const u=e.length===1?g[e[0]].label:`${e.length} tabs`;m.UI.showToast(`${u} saved successfully!`,"success"),e.forEach(v=>{L[v]=a[v];const w=k[v];(w?w.getValue():g[v].content)===a[v]?g[v].isDirty=!1:(g[v].isDirty=!0,console.log(`[CSS Editor] ${v} content changed during save, keeping dirty state`))}),this.updateToggleButtons(),this.saveState()}else throw new Error(`HTTP ${f.status}`)}catch(n){console.error("[CSS Editor] Save open tabs failed:",n),m.UI.showToast("Failed to save: "+n.message,"error")}finally{s.forEach((n,i)=>{i.disabled=n.disabled,i.classList.remove("saving"),i.textContent=n.text})}},setupKeyboardShortcuts(){J=e=>{(e.ctrlKey||e.metaKey)&&e.key==="s"&&!e.shiftKey?(e.preventDefault(),this.saveOpenTabs()):(e.ctrlKey||e.metaKey)&&e.key==="S"&&e.shiftKey?(e.preventDefault(),this.saveAll()):(e.ctrlKey||e.metaKey)&&e.key==="F"&&e.shiftKey&&(e.preventDefault(),m.Formatter.isReady()&&this.formatAllActive())},document.addEventListener("keydown",J),console.log("[CSS Editor] Keyboard shortcuts registered: Ctrl+S (save open), Ctrl+Shift+S (save all), Ctrl+Shift+F (format)")},createLivePreviewControls(){const e=m.DOM.create("button",{className:$?"live-preview-toggle enabled":"live-preview-toggle",title:`Live Preview (${$?"ON":"OFF"})`});e.innerHTML="👁️",e.addEventListener("click",()=>this.toggleLivePreview());const t=m.DOM.create("select",{className:"live-preview-role-selector"});t.innerHTML=`
                <option value="anonymous">Anonymous</option>
                <option value="viewer">Community</option>
                <option value="seated">Pro</option>
                <option value="admin">Admin</option>
                <option value="grape">Legacy</option>
            `,t.value=q,t.addEventListener("change",o=>this.setLivePreviewRole(o.target.value)),m.Overlay.setAppControls([e,t]),console.log("[CSS Editor] Live preview controls created and mounted"),this.checkOverlayWidth(),$&&this.performLivePreviewUpdate()},toggleLivePreview(){$=!$,console.log(`[CSS Editor] Live preview ${$?"enabled":"disabled"}`);const e=document.querySelector(".live-preview-toggle");e&&(e.className=$?"live-preview-toggle enabled":"live-preview-toggle",e.title=`Live Preview (${$?"ON":"OFF"})`),$?this.performLivePreviewUpdate():this.clearLivePreview(),this.saveState()},setLivePreviewRole(e){q=e,console.log(`[CSS Editor] Live preview role changed to: ${e}`),$&&this.performLivePreviewUpdate(),this.saveState()},getLivePreviewStyleTag(){return P||(P=document.createElement("style"),P.id="css-editor-live-preview",P.setAttribute("data-source","CSS Editor Live Preview"),document.head.appendChild(P),console.log("[CSS Editor] Created live preview style tag")),P},updateLivePreview(){$&&(ge&&clearTimeout(ge),ge=setTimeout(()=>{this.performLivePreviewUpdate(),ge=null},300))},performLivePreviewUpdate(){try{const e=this.getLivePreviewStyleTag(),t=["all"];q==="anonymous"?t.push("anonymous"):q==="viewer"?t.push("viewer"):q==="seated"?t.push("seated"):q==="admin"?t.push("seated","admin"):q==="grape"&&t.push("grape");let o="";t.forEach(s=>{const n=g[s];n&&n.content&&n.content.trim()&&(o+=`
/* Live Preview: ${n.label} */
`,o+=n.content,o+=`
`)}),e.textContent=o,console.log(`[CSS Editor] Live preview updated: ${o.length} chars for role "${q}"`)}catch(e){console.error("[CSS Editor] Live preview update failed:",e)}},clearLivePreview(){P&&(P.textContent="",console.log("[CSS Editor] Live preview cleared"))}};T.register(Pe),console.log("[CSS Editor App] Registered"),console.log("[HTML Editor App] Loading...");const ee=[{id:"head",label:"Page HTML Head"},{id:"tail",label:"Page HTML Tail"}],Be=2;let p=null,h={},A={},ue="",D={},te=null,oe=!1;const ze={id:"html-editor",name:"HTML Editor",constraints:{minWidth:420,minHeight:300},async init(e){console.log("[HTML Editor] Initializing..."),p=e,ee.forEach(t=>{h[t.id]={active:!1,editor:null,content:"",label:t.label,isDirty:!1}}),await p.Monaco.init(),console.log("[HTML Editor] Initialized")},async mount(e){console.log("[HTML Editor] Mounting..."),e.innerHTML=`
                <div class="enhancements-app-container">
                    <div id="message-area"></div>
                    <div id="html-editor-container" style="display: none;">
                        <div class="toggle-bar" id="toggle-bar"></div>
                        <div id="editors-grid" class="editors-grid"></div>
                    </div>
                </div>
            `,p.LoadingOverlay.show("Loading HTML from system...",{timeout:3e4,showProgress:!0});try{p.Formatter.init().then(()=>{console.log("[HTML Editor] Code formatter loaded successfully"),this.injectFormatButtons()}).catch(n=>{console.warn("[HTML Editor] Code formatter unavailable:",n)});const t=p.Storage.getAppState(this.id);let o=!1;t&&(console.log("[HTML Editor] Restoring state:",t),p.LoadingOverlay.setMessage("Restoring saved state..."),this.setState(t),o=t.isDirty&&Object.values(t.isDirty).some(n=>n),console.log("[HTML Editor] Has dirty edits in saved state:",o)),o?p.LoadingOverlay.setMessage("Loading saved edits..."):p.LoadingOverlay.setMessage("Fetching HTML from server..."),await this.loadData(o),this.setupSaveDropdownStructure(),this.buildToggleBar(),p.LoadingOverlay.setMessage("Initializing Monaco editors...");const s=!!t;console.log("[HTML Editor] Initializing editors, skip default:",s),this.initializeEditors(s),this.setupKeyboardShortcuts(),document.addEventListener("click",n=>{const i=document.querySelector(".save-dropdown"),a=document.getElementById("save-dropdown-menu");i&&a&&!i.contains(n.target)&&(a.classList.remove("show"),i.classList.remove("open")),n.target.closest(".editor-save-dropdown")||document.querySelectorAll(".editor-save-dropdown-menu.show").forEach(c=>{c.classList.remove("show")})}),p.LoadingOverlay.hide(),console.log("[HTML Editor] Mounted")}catch(t){throw console.error("[HTML Editor] Mount failed:",t),p.LoadingOverlay.showError("Failed to load HTML Editor: "+t.message),t}},async unmount(){console.log("[HTML Editor] Unmounting..."),te&&(document.removeEventListener("keydown",te),te=null),Object.values(D).forEach(e=>{e&&e.dispose()}),D={},console.log("[HTML Editor] Unmounted")},onResize(){this.checkViewportWidth(),this.updateHeights()},getState(){const e={activeFields:Object.keys(h).filter(t=>h[t].active),content:{},isDirty:{},originalContent:{}};return Object.keys(h).forEach(t=>{const o=h[t];e.content[t]=o.content,e.isDirty[t]=o.isDirty,e.originalContent[t]=A[t]}),e},setState(e){e&&(e.activeFields&&e.activeFields.forEach(t=>{h[t]&&(h[t].active=!0)}),e.content&&Object.keys(e.content).forEach(t=>{h[t]&&(h[t].content=e.content[t])}),e.isDirty&&Object.keys(e.isDirty).forEach(t=>{h[t]&&(h[t].isDirty=e.isDirty[t])}),e.originalContent&&Object.keys(e.originalContent).forEach(t=>{A[t]=e.originalContent[t]}))},checkViewportWidth(){const e=oe,t=document.getElementById("expert-enhancements-overlay");if(t&&(oe=t.offsetWidth<920),e!==oe&&(this.buildToggleBar(),oe)){const o=Object.keys(h).filter(s=>h[s].active);o.length>1&&(o.slice(1).forEach(s=>{h[s].active=!1}),this.updateGrid())}},handleMobileEditorChange(e){console.log(`[HTML Editor] handleMobileEditorChange to: ${e}`);const t=Object.keys(h).find(s=>h[s].active);if(e===t)return;Object.keys(h).forEach(s=>{h[s].active=!1}),h[e].active=!0,this.updateGrid(),this.saveState(),document.getElementById("mobile-editor-select")&&this.updateToggleButtons()},async loadData(e=!1){try{const o=await p.API.fetch("/deki/cp/custom_html.php?params=%2F");if(!o.ok)throw new Error(`HTTP ${o.status}`);const s=await o.text(),{doc:n,data:i}=p.API.parseFormHTML(s);ue=i.csrf_token,e||Object.entries({html_template_head:"head",html_template_tail:"tail"}).forEach(([c,l])=>{const r=n.querySelector(`textarea[name="${c}"]`);if(r){const d=r.textContent;h[l].content=d,A[l]=d}}),document.getElementById("html-editor-container").style.display="block",console.log("[HTML Editor] Data loaded")}catch(t){console.error("[HTML Editor] Failed to load data:",t),p.UI.showToast("Failed to load HTML: "+t.message,"error")}},buildToggleBar(){const e=document.getElementById("toggle-bar");if(!e)return;if(e.querySelectorAll(".toggle-btn, .mobile-selector-wrapper").forEach(o=>o.remove()),oe){const o=document.createElement("div");o.className="mobile-selector-wrapper";const s=document.createElement("label");s.htmlFor="mobile-editor-select",s.textContent="Editor: ",s.className="mobile-selector-label";const n=document.createElement("select");n.id="mobile-editor-select",n.className="mobile-editor-select",ee.forEach(({id:c,label:l})=>{const r=h[c],d=document.createElement("option");d.value=c;const f=r.isDirty?"● ":"✓ ";d.textContent=f+l,d.setAttribute("data-field",c),n.appendChild(d)});let i=Object.keys(h).find(c=>h[c].active);if(i)console.log(`[HTML Editor] Using existing active editor: ${i}`);else{const c=ee[0].id;h[c].active=!0,i=c,console.log(`[HTML Editor] No active editor found, activating first: ${i}`),setTimeout(()=>{this.updateGrid(),this.saveState()},0)}n.value=i,n.addEventListener("change",c=>this.handleMobileEditorChange(c.target.value)),o.appendChild(s),o.appendChild(n);const a=e.firstChild;e.insertBefore(o,a)}else ee.forEach(({id:o,label:s})=>{const n=document.createElement("button");n.className="toggle-btn",n.setAttribute("data-field",o),n.textContent=s,n.addEventListener("click",a=>this.toggleEditor(o,a));const i=e.querySelector(".save-dropdown");e.insertBefore(n,i)});this.updateToggleButtons()},setupSaveDropdownStructure(){const e=document.getElementById("toggle-bar");if(!e)return;const t=p.DOM.create("div",{className:"save-dropdown"}),o=p.DOM.create("button",{className:"btn btn-primary",id:"save-btn"},["Save All"]),s=p.DOM.create("button",{className:"btn btn-dropdown-toggle",id:"save-dropdown-toggle"},["▼"]),n=p.DOM.create("div",{className:"dropdown-menu",id:"save-dropdown-menu"}),i=p.DOM.create("button",{className:"dropdown-item",id:"discard-btn"},["Discard All"]);n.appendChild(i),t.appendChild(o),t.appendChild(s),t.appendChild(n),e.appendChild(t),this.setupSaveDropdown(),this.updateToggleButtons()},setupSaveDropdown(){const e=document.getElementById("save-btn"),t=document.getElementById("discard-btn"),o=document.getElementById("save-dropdown-toggle"),s=document.getElementById("save-dropdown-menu"),n=document.querySelector(".save-dropdown");e&&e.addEventListener("click",()=>this.saveAll()),t&&t.addEventListener("click",i=>{i.stopPropagation(),this.discardAll()}),o&&s&&n&&o.addEventListener("click",i=>{i.stopPropagation(),s.classList.toggle("show"),n.classList.toggle("open")})},toggleEditor(e,t){const o=h[e];if(!o)return;const s=Object.values(h).filter(i=>i.active).length;if(t&&t.shiftKey)if(o.active)o.active=!1;else{if(s>=Be){p.UI.showToast(`Maximum ${Be} editors can be open at once`,"warning");return}o.active=!0}else{if(o.active&&s===1)return;Object.keys(h).forEach(i=>{h[i].active=!1}),o.active=!0}this.updateGrid(),this.updateToggleButtons(),this.saveState()},saveState(){const e=this.getState();p.Storage.setAppState(this.id,e)},updateGrid(){const e=document.getElementById("editors-grid");if(!e)return;const t=Object.keys(h).filter(o=>h[o].active);e.innerHTML="",e.className="editors-grid cols-"+t.length,t.forEach(o=>{const s=this.createEditorPane(o);e.appendChild(s)}),setTimeout(()=>{this.updateHeights()},50)},updateHeights(){const e=document.getElementById("html-editor-container"),t=document.querySelector(".toggle-bar"),o=document.getElementById("editors-grid");if(!e||!t||!o)return;const s=e.offsetHeight,n=t.offsetHeight,i=s-n;o.style.height=i+"px",o.querySelectorAll(".editor-pane").forEach(c=>{c.style.height=i+"px";const l=c.querySelector(".editor-pane-header"),r=c.querySelector(".editor-instance");if(l&&r){const d=l.offsetHeight,f=i-d;r.style.height=f+"px"}}),Object.values(D).forEach(c=>{c&&c.layout()})},createEditorPane(e){const t=h[e],o=p.DOM.create("div",{className:"editor-pane"}),s=p.DOM.create("div",{className:"editor-pane-header"}),n=p.DOM.create("div",{className:"header-left",style:{display:"flex",alignItems:"center",gap:"0.5rem"}}),i=p.DOM.create("div",{style:{display:"flex",alignItems:"center",gap:"0.5rem"}}),a=p.DOM.create("span",{},[t.label]),c=p.DOM.create("span",{className:"editor-status",id:`status-${e}`,style:{fontSize:"0.9rem"}},[t.isDirty?"●":"✓"]);i.appendChild(c),i.appendChild(a),n.appendChild(i);const l=p.DOM.create("div",{className:"header-right",style:{display:"flex",alignItems:"center",gap:"0.5rem"}}),r=p.DOM.create("div",{className:"editor-save-dropdown"}),d=p.DOM.create("button",{className:"editor-pane-save","data-save-field":e},["Save"]);d.addEventListener("click",()=>this.saveField(e));const f=p.DOM.create("button",{className:"editor-save-dropdown-toggle","data-dropdown-field":e},["▼"]);f.addEventListener("click",C=>{C.stopPropagation(),this.toggleEditorDropdown(e)});const u=p.DOM.create("div",{className:"editor-save-dropdown-menu","data-menu-field":e}),v=p.DOM.create("button",{className:"editor-dropdown-item","data-revert-field":e},["Revert this"]);v.addEventListener("click",C=>{C.stopPropagation(),this.revertField(e)}),u.appendChild(v),r.appendChild(d),r.appendChild(f),r.appendChild(u);const w=p.DOM.create("div",{className:"editor-actions-dropdown",style:{position:"relative"}}),S=p.DOM.create("button",{className:"editor-actions-btn","data-actions-field":e},["Actions ▼"]);S.addEventListener("click",C=>{C.stopPropagation(),this.toggleActionsDropdown(e)});const b=p.DOM.create("div",{className:"editor-actions-menu","data-actions-menu-field":e});if(p.Formatter.isReady()){const C=p.DOM.create("button",{className:"editor-actions-item","data-format-field":e},["Format"]);C.addEventListener("click",be=>{be.stopPropagation(),this.formatField(e),b.classList.remove("show")}),b.appendChild(C)}const O=p.DOM.create("input",{type:"file",accept:".html",style:"display: none;",id:`file-input-${e}`});O.addEventListener("change",C=>{C.target.files&&C.target.files[0]&&(this.importField(e,C.target.files[0]),C.target.value="")});const B=p.DOM.create("button",{className:"editor-actions-item","data-import-field":e},["Import"]);B.addEventListener("click",C=>{C.stopPropagation(),O.click(),b.classList.remove("show")});const ne=p.DOM.create("button",{className:"editor-actions-item","data-export-field":e},["Export"]);ne.addEventListener("click",C=>{C.stopPropagation(),this.exportField(e),b.classList.remove("show")}),b.appendChild(B),b.appendChild(ne),w.appendChild(S),w.appendChild(b),l.appendChild(r),l.appendChild(w),o.appendChild(O),s.appendChild(n),s.appendChild(l),o.appendChild(s);const se=p.DOM.create("div",{className:"editor-instance",id:`editor-${e}`});return o.appendChild(se),p.Monaco.isReady()&&this.createMonacoEditor(e,se),o},createMonacoEditor(e,t){const o=h[e],n=p.Monaco.get().editor.create(t,{value:o.content||"",language:"html",theme:"vs-dark",automaticLayout:!1,minimap:{enabled:!0},fontSize:14,wordWrap:"on",scrollBeyondLastLine:!1});D[e]=n,n.onDidChangeModelContent(()=>{o.content=n.getValue(),o.isDirty=o.content!==A[e],this.updateToggleButtons()}),console.log(`[HTML Editor] Created Monaco editor for: ${e}`)},initializeEditors(e=!1){const t=Object.values(h).some(o=>o.active);!e&&!t?(h.head.active=!0,console.log("[HTML Editor] No saved state, activating default: head")):console.log("[HTML Editor] Skipping default activation, skipDefault:",e,"hasActive:",t),this.updateGrid()},updateToggleButtons(){document.querySelectorAll(".toggle-btn").forEach(o=>{const s=o.getAttribute("data-field"),n=h[s];n&&n.active?o.classList.add("active"):o.classList.remove("active"),n&&n.isDirty?(o.style.fontWeight="bold",o.style.color="#ff9800"):(o.style.fontWeight="",o.style.color="")});const t=document.getElementById("mobile-editor-select");t&&t.querySelectorAll("option[data-field]").forEach(s=>{const n=s.getAttribute("data-field"),i=h[n];if(i){const a=i.isDirty?"● ":"✓ ",c=ee.find(l=>l.id===n)?.label||n;s.textContent=a+c}}),Object.keys(h).forEach(o=>{const s=document.getElementById(`status-${o}`);if(s){const n=h[o];s.textContent=n.isDirty?"●":"✓",s.style.color=n.isDirty?"#ff9800":"#4caf50"}})},exportField(e){const t=h[e];if(t)try{const o=t.content||"",s=new Blob([o],{type:"text/html"}),n=URL.createObjectURL(s),i=document.createElement("a");i.href=n,i.download=`html_template_${e}.html`,i.click(),URL.revokeObjectURL(n),p.UI.showToast(`Exported ${t.label}`,"success")}catch(o){p.UI.showToast(`Failed to export: ${o.message}`,"error")}},importField(e,t){const o=h[e];if(!o)return;if(!t.name.endsWith(".html")){p.UI.showToast("Please select an HTML file (.html)","error");return}const s=5*1024*1024;if(t.size>s){p.UI.showToast(`File too large. Maximum size is 5MB (file is ${(t.size/1024/1024).toFixed(2)}MB)`,"error");return}if(t.size===0){p.UI.showToast("Cannot import empty file","error");return}p.LoadingOverlay.show(`Importing ${t.name}...`);const n=new FileReader;n.onload=i=>{try{const a=i.target.result,c=`

<!-- ========================================
     Imported from: ${t.name}
     Date: ${new Date().toLocaleString()}
     ======================================== -->
`,r=(o.content||"")+c+a;if(o.content=r,o.isDirty=!0,D[e]){const d=D[e],f=d.getModel(),u=f.getLineCount(),v=f.getLineLength(u);d.executeEdits("import",[{range:new monaco.Range(u,v+1,u,v+1),text:c+a}])}this.saveState(),this.updateToggleButtons(),p.LoadingOverlay.hide(),p.UI.showToast(`Content from ${t.name} appended to ${o.label}`,"success",5e3)}catch(a){p.LoadingOverlay.hide(),p.UI.showToast(`Failed to import: ${a.message}`,"error")}},n.onerror=()=>{p.LoadingOverlay.hide(),p.UI.showToast("Failed to read file","error")},n.readAsText(t)},async importFile(e,t){try{p.LoadingOverlay.hide();const o=Object.keys(h).map(l=>({id:l,label:h[l].label})),s=await p.FileImport.showRoleSelector(o,"html");if(!s){p.LoadingOverlay.hide(),p.UI.showToast("Import cancelled","info");return}const n=h[s];if(!n){p.LoadingOverlay.hide(),p.UI.showToast("Selected field not found","error");return}const i=`

<!-- ========================================
     Imported from: ${t}
     Date: ${new Date().toLocaleString()}
     ======================================== -->
`,c=(n.content||"")+i+e;if(n.content=c,n.isDirty=!0,D[s]){const l=D[s],r=l.getModel(),d=r.getLineCount(),f=r.getLineLength(d);l.executeEdits("import",[{range:new monaco.Range(d,f+1,d,f+1),text:i+e}]),setTimeout(()=>{l.layout(),l.focus();const u=l.getDomNode();u&&(u.style.pointerEvents="auto")},50)}this.saveState(),this.updateToggleButtons(),p.LoadingOverlay.hide(),p.UI.showToast(`Content from ${t} appended to ${n.label}`,"success",5e3)}catch(o){p.LoadingOverlay.hide(),p.UI.showToast(`Failed to import: ${o.message}`,"error")}},injectFormatButtons(){console.log("[HTML Editor] Injecting format buttons into rendered panes"),document.querySelectorAll(".editor-pane").forEach(t=>{const o=t.querySelector(".editor-pane-actions"),s=t.querySelector(".editor-pane-export");if(!o||!s||t.querySelector(".editor-pane-format"))return;const n=s.getAttribute("data-export-field");if(!n)return;const i=p.DOM.create("button",{className:"editor-pane-format","data-format-field":n,title:"Format HTML (Ctrl+Shift+F)"},["Format"]);i.addEventListener("click",()=>this.formatField(n)),o.insertBefore(i,s),console.log(`[HTML Editor] Format button injected for: ${n}`)})},async formatField(e,t=!1){if(!p.Formatter.isReady())return p.UI.showToast("Code formatting is currently unavailable","warning"),null;const o=h[e],s=D[e];if(!o||!s)return null;try{console.log(`[HTML Editor] Formatting ${e}...`);const n=s.getValue();if(!n||n.trim()==="")return p.UI.showToast("Nothing to format","warning"),null;const i=await p.Formatter.formatHTML(n),a=n!==i;if(s.setValue(i),o.content=i,o.isDirty=o.content!==A[e],this.updateToggleButtons(),!t){const c=a?`${o.label} formatted`:`${o.label} already formatted`;p.UI.showToast(c,"success")}return{changed:a,label:o.label}}catch(n){return console.error(`[HTML Editor] Format ${e} failed:`,n),p.UI.showToast(`Formatting failed: ${n.message}`,"error"),null}},async formatAllActive(){if(!p.Formatter.isReady()){p.UI.showToast("Code formatting is currently unavailable","warning");return}const e=Object.keys(h).filter(t=>h[t].active);if(e.length===0){p.UI.showToast("No editors open to format","warning");return}try{console.log(`[HTML Editor] Formatting ${e.length} active editor(s)...`);const t=[];for(const i of e){const a=await this.formatField(i,!0);a&&t.push(a)}const o=t.filter(i=>i.changed),s=o.length;let n;s===0?n=t.length===1?`${t[0].label} already formatted`:"Already formatted":s===1?n=`${o[0].label} formatted`:n=`${s} editors formatted`,p.UI.showToast(n,"success")}catch(t){console.error("[HTML Editor] Format all active failed:",t),p.UI.showToast(`Formatting failed: ${t.message}`,"error")}},discardAll(){const e=Object.values(h).some(o=>o.isDirty),t=document.getElementById("discard-btn");if(e){t&&!t.classList.contains("confirming")&&p.UI.showInlineConfirmation(t,()=>{this.performDiscardAll()});return}t&&!t.classList.contains("showing-no-changes")&&p.UI.showNoChangesMessage(t)},performDiscardAll(){Object.keys(h).forEach(t=>{h[t].content=A[t]||"",h[t].isDirty=!1;const o=D[t];o&&o.setValue(h[t].content)}),this.updateToggleButtons(),Object.values(h).every(t=>!t.isDirty)?(console.log("[HTML Editor] All editors clean, clearing app state"),p.Storage.clearAppState(this.id)):this.saveState(),p.UI.showToast("All changes discarded","success")},revertField(e){const t=h[e];if(!t)return;const o=document.querySelector(`[data-revert-field="${e}"]`);if(o){if(t.isDirty){o.classList.contains("confirming")||p.UI.showInlineConfirmation(o,()=>{this.performRevert(e)});return}o.classList.contains("showing-no-changes")||p.UI.showNoChangesMessage(o)}},performRevert(e){const t=h[e];if(!t)return;t.content=A[e]||"",t.isDirty=!1;const o=D[e];o&&o.setValue(t.content);const s=document.querySelector(`[data-menu-field="${e}"]`);s&&s.classList.remove("show"),this.updateToggleButtons(),Object.values(h).every(i=>!i.isDirty)?(console.log("[HTML Editor] All editors clean, clearing app state"),p.Storage.clearAppState(this.id)):this.saveState(),p.UI.showToast(`${t.label} reverted`,"success")},toggleEditorDropdown(e){const t=document.querySelector(`[data-menu-field="${e}"]`);t&&(document.querySelectorAll(".editor-save-dropdown-menu.show").forEach(o=>{o!==t&&o.classList.remove("show")}),t.classList.toggle("show"))},toggleActionsDropdown(e){const t=document.querySelector(`[data-actions-menu-field="${e}"]`);t&&(document.querySelectorAll(".editor-actions-menu.show").forEach(o=>{o!==t&&o.classList.remove("show")}),t.classList.toggle("show"))},async saveField(e){try{console.log(`[HTML Editor] Saving ${e}...`);const t=h[e];if(!t)throw new Error(`Field ${e} not found`);const o=D[e];if(o&&(t.content=o.getValue()),p.Storage.getFormatterSettings().formatOnSave&&p.Formatter.isReady()&&t.content&&t.content.trim()!=="")try{console.log(`[HTML Editor] Auto-formatting ${e} before save...`);const d=await p.Formatter.formatHTML(t.content);t.content=d,o&&o.setValue(d)}catch(d){console.warn(`[HTML Editor] Auto-format failed for ${e}:`,d)}if(!t.isDirty&&t.content===A[e]){p.UI.showToast(`${t.label} has no changes to save`,"warning");return}const n=t.content,i={csrf_token:ue,html_template_head:e==="head"?h.head.content:A.head,html_template_tail:e==="tail"?h.tail.content:A.tail},{body:a,boundary:c}=p.API.buildMultipartBody(i),r=await p.API.fetch("/deki/cp/custom_html.php?params=%2F",{method:"POST",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8","Accept-Language":"en-US,en;q=0.9","Cache-Control":"max-age=0","Content-Type":`multipart/form-data; boundary=${c}`},credentials:"include",body:a,redirect:"follow"});if(r.ok||r.redirected)p.UI.showToast(`${t.label} saved successfully!`,"success"),A[e]=n,(o?o.getValue():t.content)===n?t.isDirty=!1:(t.isDirty=!0,console.log(`[HTML Editor] ${e} content changed during save, keeping dirty state`)),this.updateToggleButtons(),this.saveState();else throw new Error(`HTTP ${r.status}`)}catch(t){console.error(`[HTML Editor] Save ${e} failed:`,t),p.UI.showToast(`Failed to save: ${t.message}`,"error")}},async saveAll(){try{if(console.log("[HTML Editor] Saving all HTML..."),Object.keys(D).forEach(l=>{const r=D[l];r&&(h[l].content=r.getValue())}),p.Storage.getFormatterSettings().formatOnSave&&p.Formatter.isReady())for(const l of Object.keys(h)){const r=h[l];if(r.content&&r.content.trim()!=="")try{console.log(`[HTML Editor] Auto-formatting ${l} before save...`);const d=await p.Formatter.formatHTML(r.content);r.content=d;const f=D[l];f&&f.setValue(d)}catch(d){console.warn(`[HTML Editor] Auto-format failed for ${l}:`,d)}}if(!Object.keys(h).some(l=>h[l].isDirty||h[l].content!==A[l])){p.UI.showToast("No changes to save","warning");return}const o={};Object.keys(h).forEach(l=>{o[l]=h[l].content});const s={csrf_token:ue,html_template_head:h.head.content,html_template_tail:h.tail.content},{body:n,boundary:i}=p.API.buildMultipartBody(s),c=await p.API.fetch("/deki/cp/custom_html.php?params=%2F",{method:"POST",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8","Accept-Language":"en-US,en;q=0.9","Cache-Control":"max-age=0","Content-Type":`multipart/form-data; boundary=${i}`},credentials:"include",body:n,redirect:"follow"});if(c.ok||c.redirected)p.UI.showToast("HTML saved successfully!","success"),Object.keys(h).forEach(l=>{A[l]=o[l];const r=D[l];(r?r.getValue():h[l].content)===o[l]?h[l].isDirty=!1:(h[l].isDirty=!0,console.log(`[HTML Editor] ${l} content changed during save, keeping dirty state`))}),this.updateToggleButtons(),this.saveState();else throw new Error(`HTTP ${c.status}`)}catch(e){console.error("[HTML Editor] Save failed:",e),p.UI.showToast("Failed to save HTML: "+e.message,"error")}},async saveOpenTabs(){try{const e=Object.keys(h).filter(r=>h[r].active);if(e.length===0){p.UI.showToast("No tabs open to save","warning");return}if(console.log(`[HTML Editor] Saving ${e.length} open tab(s):`,e),e.forEach(r=>{const d=D[r];d&&(h[r].content=d.getValue())}),p.Storage.getFormatterSettings().formatOnSave&&p.Formatter.isReady())for(const r of e){const d=h[r];if(d.content&&d.content.trim()!=="")try{console.log(`[HTML Editor] Auto-formatting ${r} before save...`);const f=await p.Formatter.formatHTML(d.content);d.content=f;const u=D[r];u&&u.setValue(f)}catch(f){console.warn(`[HTML Editor] Auto-format failed for ${r}:`,f)}}if(!e.some(r=>h[r].isDirty||h[r].content!==A[r])){const r=e.length===1?h[e[0]].label:`${e.length} tabs`;p.UI.showToast(`${r} have no changes to save`,"warning");return}const s={};e.forEach(r=>{s[r]=h[r].content});const n={csrf_token:ue,html_template_head:e.includes("head")?h.head.content:A.head,html_template_tail:e.includes("tail")?h.tail.content:A.tail},{body:i,boundary:a}=p.API.buildMultipartBody(n),l=await p.API.fetch("/deki/cp/custom_html.php?params=%2F",{method:"POST",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8","Accept-Language":"en-US,en;q=0.9","Cache-Control":"max-age=0","Content-Type":`multipart/form-data; boundary=${a}`},credentials:"include",body:i,redirect:"follow"});if(l.ok||l.redirected){const r=e.length===1?h[e[0]].label:`${e.length} tabs`;p.UI.showToast(`${r} saved successfully!`,"success"),e.forEach(d=>{A[d]=s[d];const f=D[d];(f?f.getValue():h[d].content)===s[d]?h[d].isDirty=!1:(h[d].isDirty=!0,console.log(`[HTML Editor] ${d} content changed during save, keeping dirty state`))}),this.updateToggleButtons(),this.saveState()}else throw new Error(`HTTP ${l.status}`)}catch(e){console.error("[HTML Editor] Save open tabs failed:",e),p.UI.showToast("Failed to save: "+e.message,"error")}},setupKeyboardShortcuts(){te=e=>{(e.ctrlKey||e.metaKey)&&e.key==="s"&&!e.shiftKey?(e.preventDefault(),this.saveOpenTabs()):(e.ctrlKey||e.metaKey)&&e.key==="S"&&e.shiftKey?(e.preventDefault(),this.saveAll()):(e.ctrlKey||e.metaKey)&&e.key==="F"&&e.shiftKey&&(e.preventDefault(),p.Formatter.isReady()&&this.formatAllActive())},document.addEventListener("keydown",te),console.log("[HTML Editor] Keyboard shortcuts registered: Ctrl+S (save open), Ctrl+Shift+S (save all), Ctrl+Shift+F (format)")}};T.register(ze),console.log("[HTML Editor App] Registered"),console.log("[Settings App] Loading...");let W=null,M=null;const Re={id:"settings",name:"Settings",constraints:{minWidth:420,minHeight:300},async init(e){console.log("[Settings] Initializing..."),W=e,M=W.Storage.getFormatterSettings(),console.log("[Settings] Initialized")},async mount(e){console.log("[Settings] Mounting..."),M=W.Storage.getFormatterSettings(),e.innerHTML=`
                <div class="enhancements-app-container">
                    <div class="settings-container">
                        <h2 class="settings-heading">Code Formatting Settings</h2>

                        <div class="settings-section">
                            <h3 class="settings-section-title">General</h3>

                            <div class="settings-option">
                                <label class="settings-label">
                                    <input type="checkbox" id="format-on-save" ${M.formatOnSave?"checked":""}>
                                    <span>Auto-format on save</span>
                                </label>
                                <p class="settings-description">Automatically format code when clicking Save</p>
                            </div>
                        </div>

                        <div class="settings-section">
                            <h3 class="settings-section-title">Indentation</h3>

                            <div class="settings-option">
                                <label class="settings-label">Indent Style</label>
                                <div class="settings-radio-group">
                                    <label class="settings-radio">
                                        <input type="radio" name="indent-style" value="spaces" ${M.indentStyle==="spaces"?"checked":""}>
                                        <span>Spaces</span>
                                    </label>
                                    <label class="settings-radio">
                                        <input type="radio" name="indent-style" value="tabs" ${M.indentStyle==="tabs"?"checked":""}>
                                        <span>Tabs</span>
                                    </label>
                                </div>
                            </div>

                            <div class="settings-option">
                                <label class="settings-label" for="indent-size">
                                    Indent Size
                                </label>
                                <select id="indent-size" class="settings-select">
                                    <option value="2" ${M.indentSize===2?"selected":""}>2</option>
                                    <option value="4" ${M.indentSize===4?"selected":""}>4</option>
                                    <option value="8" ${M.indentSize===8?"selected":""}>8</option>
                                </select>
                                <p class="settings-description" id="indent-size-description">
                                    ${M.indentStyle==="tabs"?"Tab width (visual display)":"Number of spaces per indentation level"}
                                </p>
                            </div>
                        </div>

                        <div class="settings-section">
                            <h3 class="settings-section-title">Code Style</h3>

                            <div class="settings-option">
                                <label class="settings-label">Quote Style</label>
                                <div class="settings-radio-group">
                                    <label class="settings-radio">
                                        <input type="radio" name="quote-style" value="single" ${M.quoteStyle==="single"?"checked":""}>
                                        <span>Single quotes (')</span>
                                    </label>
                                    <label class="settings-radio">
                                        <input type="radio" name="quote-style" value="double" ${M.quoteStyle==="double"?"checked":""}>
                                        <span>Double quotes (")</span>
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="settings-actions">
                            <button class="btn btn-secondary" id="reset-btn">Reset to Defaults</button>
                            <button class="btn btn-primary" id="save-settings-btn">Save Settings</button>
                        </div>

                        <div class="settings-info">
                            <p><strong>Keyboard Shortcuts:</strong></p>
                            <ul>
                                <li><code>Ctrl+Shift+F</code> - Format current editor</li>
                            </ul>
                            <p class="settings-note">
                                Settings apply immediately to all editors. Formatting uses Prettier for consistent, industry-standard code style.
                            </p>
                        </div>
                    </div>
                </div>
            `,this.injectStyles(),this.attachListeners(),console.log("[Settings] Mounted")},async unmount(){console.log("[Settings] Unmounting..."),console.log("[Settings] Unmounted")},getState(){return{lastViewed:Date.now()}},setState(e){},injectStyles(){if(document.getElementById("settings-app-styles"))return;const e=document.createElement("style");e.id="settings-app-styles",e.textContent=`
                .enhancements-app-container {
                    overflow-y: auto;
                    height: 100%;
                }

                .settings-container {
                    padding: 2rem;
                    max-width: 800px;
                    margin: 0 auto;
                    color: #e9ecef;
                }

                .settings-heading {
                    font-size: 1.75rem;
                    font-weight: 600;
                    margin: 0 0 2rem 0;
                    color: #fff;
                    border-bottom: 2px solid #444;
                    padding-bottom: 0.75rem;
                }

                .settings-section {
                    margin-bottom: 2.5rem;
                }

                .settings-section-title {
                    font-size: 1.25rem;
                    font-weight: 500;
                    margin: 0 0 1.25rem 0;
                    color: #fff;
                }

                .settings-option {
                    margin-bottom: 1.5rem;
                }

                .settings-label {
                    display: block;
                    font-weight: 500;
                    margin-bottom: 0.5rem;
                    color: #e9ecef;
                    font-size: 0.95rem;
                }

                .settings-label input[type="checkbox"] {
                    margin-right: 0.5rem;
                    cursor: pointer;
                }

                .settings-description {
                    font-size: 0.875rem;
                    color: #adb5bd;
                    margin: 0.375rem 0 0 0;
                }

                .settings-radio-group {
                    display: flex;
                    gap: 1.5rem;
                    margin-top: 0.5rem;
                }

                .settings-radio {
                    display: flex;
                    align-items: center;
                    cursor: pointer;
                }

                .settings-radio input[type="radio"] {
                    margin-right: 0.5rem;
                    cursor: pointer;
                }

                .settings-select {
                    width: 100%;
                    max-width: 200px;
                    padding: 0.5rem;
                    background: #2d2d30;
                    border: 1px solid #444;
                    border-radius: 4px;
                    color: #e9ecef;
                    font-size: 0.95rem;
                    cursor: pointer;
                    margin-top: 0.5rem;
                }

                .settings-select:focus {
                    outline: none;
                    border-color: #0d6efd;
                }

                .settings-actions {
                    display: flex;
                    gap: 1rem;
                    margin: 2rem 0;
                    padding-top: 2rem;
                    border-top: 1px solid #444;
                }

                .settings-info {
                    margin-top: 2rem;
                    padding: 1.5rem;
                    background: rgba(13, 110, 253, 0.1);
                    border: 1px solid rgba(13, 110, 253, 0.3);
                    border-radius: 6px;
                }

                .settings-info strong {
                    color: #fff;
                }

                .settings-info ul {
                    margin: 0.75rem 0;
                    padding-left: 1.5rem;
                }

                .settings-info li {
                    margin: 0.375rem 0;
                }

                .settings-info code {
                    background: rgba(0, 0, 0, 0.3);
                    padding: 0.2rem 0.4rem;
                    border-radius: 3px;
                    font-family: 'Monaco', 'Courier New', monospace;
                    font-size: 0.875rem;
                }

                .settings-note {
                    margin-top: 1rem;
                    font-size: 0.875rem;
                    color: #adb5bd;
                }

                .btn {
                    padding: 0.5rem 1.25rem;
                    border-radius: 4px;
                    font-size: 0.95rem;
                    font-weight: 500;
                    cursor: pointer;
                    transition: all 0.2s;
                    border: none;
                }

                .btn-primary {
                    background: #0d6efd;
                    color: white;
                }

                .btn-primary:hover {
                    background: #0b5ed7;
                }

                .btn-secondary {
                    background: transparent;
                    color: #e9ecef;
                    border: 1px solid #555;
                }

                .btn-secondary:hover {
                    background: #3a3a3a;
                }
            `,document.head.appendChild(e)},attachListeners(){const e=document.getElementById("format-on-save");e&&e.addEventListener("change",c=>{M.formatOnSave=c.target.checked,this.updateSettings()});const t=document.querySelectorAll('input[name="indent-style"]'),o=document.getElementById("indent-size-description");t.forEach(c=>{c.addEventListener("change",l=>{M.indentStyle=l.target.value,o&&(o.textContent=l.target.value==="tabs"?"Tab width (visual display)":"Number of spaces per indentation level"),this.updateSettings()})});const s=document.getElementById("indent-size");s&&s.addEventListener("change",c=>{M.indentSize=parseInt(c.target.value,10),this.updateSettings()}),document.querySelectorAll('input[name="quote-style"]').forEach(c=>{c.addEventListener("change",l=>{M.quoteStyle=l.target.value,this.updateSettings()})});const i=document.getElementById("reset-btn");i&&i.addEventListener("click",()=>this.resetToDefaults());const a=document.getElementById("save-settings-btn");a&&a.addEventListener("click",()=>this.saveSettings())},updateSettings(){W.Storage.setFormatterSettings(M),console.log("[Settings] Settings auto-saved:",M)},saveSettings(){W.Storage.setFormatterSettings(M),W.UI.showToast("Settings saved successfully!","success"),console.log("[Settings] Settings saved:",M)},resetToDefaults(){const e={formatOnSave:!0,indentStyle:"spaces",indentSize:2,quoteStyle:"single",cssSettings:{parser:"css"},htmlSettings:{parser:"html"}};M=e,W.Storage.setFormatterSettings(e);const t=document.querySelector(".enhancements-app-container");t&&this.mount(t.parentElement),W.UI.showToast("Settings reset to defaults","info"),console.log("[Settings] Reset to defaults")}};T.register(Re),console.log("[Settings App] Registered"),console.log("[Expert Enhancements] Main entry point loading..."),console.log(`[Expert Enhancements] Core loaded (v${Oe})`),console.log("[Expert Enhancements] All modules loaded successfully");function _e(){return new Promise((e,t)=>{const o=window.define,s=window.require;console.log("[Expert Enhancements] Temporarily hiding AMD for Monaco loader"),delete window.define,delete window.require;const n=document.createElement("script");n.src="https://cdn.jsdelivr.net/npm/monaco-editor@0.44.0/min/vs/loader.js",n.onload=()=>{console.log("[Expert Enhancements] Monaco loader loaded, restoring page AMD"),o&&(window.define=o),s&&(window.require=s),window.monacoRequire=require,console.log("[Expert Enhancements] Page AMD restored, Monaco require stored"),e()},n.onerror=()=>{console.error("[Expert Enhancements] Failed to load Monaco loader"),o&&(window.define=o),s&&(window.require=s),t(new Error("Failed to load Monaco loader"))},document.head.appendChild(n)})}function qe(){return new Promise(e=>{const t=document.getElementsByTagName("script"),o=Array.from(t).find(i=>i.src&&i.src.includes("embed"));let s;if(o&&o.src){const i=o.src;s=`${i.substring(0,i.lastIndexOf("/"))}/core.css`}else s="core.css";console.log("[Expert Enhancements] Loading CSS:",s);const n=document.createElement("link");n.rel="stylesheet",n.href=s,n.onload=()=>{console.log("[Expert Enhancements] CSS loaded"),e()},n.onerror=()=>{console.warn("[Expert Enhancements] CSS failed to load, continuing anyway"),e()},document.head.appendChild(n)})}async function He(){try{console.log("[Expert Enhancements] Initializing UI..."),await qe(),await _e(),console.log("[Expert Enhancements] Pre-loading Monaco..."),await ye.init(),console.log("[Expert Enhancements] Monaco ready"),Ne(),j.create(),j.updateAppSwitcher();const e=F.getCommonState(),t=e.lastActiveApp||"css-editor";console.log("[Expert Enhancements] Loading last active app:",t);let o=!1;e.overlayOpen&&(G.show("Initializing editor...",{timeout:3e4,showProgress:!0}),o=!0),await T.switchTo(t),e.overlayOpen&&(console.log("[Expert Enhancements] Restoring overlay open state"),setTimeout(()=>{j.toggle(),o&&setTimeout(()=>{G.hide()},500)},300)),console.log("[Expert Enhancements] Initialization complete!")}catch(e){console.error("[Expert Enhancements] Initialization failed:",e)}}function Ne(){const e=document.createElement("button");e.id="expert-enhancements-toggle",e.innerHTML="&lt;/&gt;",e.title="CXone Expert Enhancements",e.style.cssText=`
        position: fixed;
        top: 15px;
        right: -45px;
        width: 100px;
        height: 50px;
        border-radius: 25px;
        background: #667eea;
        border: 3px solid white;
        color: white;
        font-size: 20px;
        font-weight: bold;
        font-family: monospace;
        cursor: pointer;
        z-index: 999998;
        box-shadow: -4px 4px 20px rgba(0, 0, 0, 0.3);
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: left;
        padding-left: 12px;
        line-height: 1;
    `,e.addEventListener("mouseenter",()=>{e.style.transform="scale(1.1)",e.style.boxShadow="-6px 6px 30px rgba(102, 126, 234, 0.5)"}),e.addEventListener("mouseleave",()=>{e.style.transform="scale(1)",e.style.boxShadow="-4px 4px 20px rgba(0, 0, 0, 0.3)"}),e.addEventListener("click",()=>{j.toggle()}),document.body.appendChild(e),console.log("[Expert Enhancements] Toggle button created")}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",He):He()})();
//# sourceMappingURL=embed.js.map
